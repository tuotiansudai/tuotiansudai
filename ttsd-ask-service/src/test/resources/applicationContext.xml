<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.2.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:property-placeholder location="classpath*:ttsd-env.properties,classpath*:ask-redis-key-template.properties"/>

    <!-- enable autowire -->
    <context:annotation-config />

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <aop:aspectj-autoproxy expose-proxy="true" />

    <!-- enable component scanning (beware that this does not enable mapper scanning!) -->
    <context:component-scan base-package="com.tuotiansudai.ask,com.tuotiansudai.client,com.tuotiansudai.cache"/>

    <bean id="hikariCPDataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <constructor-arg>
            <bean class="com.zaxxer.hikari.HikariConfig">
                <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
                <property name="jdbcUrl" value="jdbc:mysql://${common.jdbc.host}:${common.jdbc.port}/${ask.jdbc.schema}?useUnicode=true&amp;characterEncoding=UTF-8"/>
                <property name="username" value="${ask.jdbc.username}"/>
                <property name="password" value="${ask.jdbc.password}"/>
                <property name="minimumIdle" value="${ask.minimumIdle}"/>
                <property name="maximumPoolSize" value="${ask.maximumPoolSize}"/>
                <property name="idleTimeout" value="${common.jdbc.idleTimeout}"/>
                <property name="dataSourceProperties">
                    <props>
                        <prop key="cachePrepStmts">${common.jdbc.cachePrepStmts}</prop>
                        <prop key="prepStmtCacheSize">${common.jdbc.prepStmtCacheSize}</prop>
                        <prop key="prepStmtCacheSqlLimit">${common.jdbc.prepStmtCacheSqlLimit}</prop>
                    </props>
                </property>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="aaHikariCPDataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <constructor-arg>
            <bean class="com.zaxxer.hikari.HikariConfig">
                <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
                <property name="jdbcUrl" value="jdbc:mysql://${common.jdbc.host}:${common.jdbc.port}/aa?useUnicode=true&amp;characterEncoding=UTF-8"/>
                <property name="username" value="${common.jdbc.username}"/>
                <property name="password" value="${common.jdbc.password}"/>
                <property name="minimumIdle" value="${ask.aa.minimumIdle}"/>
                <property name="maximumPoolSize" value="${ask.aa.maximumPoolSize}"/>
                <property name="idleTimeout" value="${common.jdbc.idleTimeout}"/>
                <property name="dataSourceProperties">
                    <props>
                        <prop key="cachePrepStmts">${common.jdbc.cachePrepStmts}</prop>
                        <prop key="prepStmtCacheSize">${common.jdbc.prepStmtCacheSize}</prop>
                        <prop key="prepStmtCacheSqlLimit">${common.jdbc.prepStmtCacheSqlLimit}</prop>
                    </props>
                </property>
            </bean>
        </constructor-arg>
    </bean>

    <!-- transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="hikariCPDataSource"/>
    </bean>

    <bean id="aaTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="aaHikariCPDataSource"/>
    </bean>

    <bean id="aaSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="aaHikariCPDataSource"/>
        <property name="typeAliasesPackage" value="com.tuotiansudai.repository.model"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="hikariCPDataSource"/>
        <property name="typeAliasesPackage" value="com.tuotiansudai.ask.repository.model"/>
    </bean>

    <!-- scan for mappers and let them be autowired -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="aaSqlSessionFactory"/>
        <property name="basePackage" value="com.tuotiansudai.repository.mapper"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.tuotiansudai.ask.repository.mapper"/>
    </bean>

    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${ask.jedis.pool.maxTotal}"/>
    </bean>

    <bean id="httpClient" class="com.squareup.okhttp.OkHttpClient"/>

    <!--for test-->
    <bean id="httpServletRequest" class="org.springframework.mock.web.MockHttpServletRequest"/>
</beans>