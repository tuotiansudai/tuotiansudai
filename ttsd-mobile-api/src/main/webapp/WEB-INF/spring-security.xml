<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
		   http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		   http://www.springframework.org/schema/security
		   http://www.springframework.org/schema/security/spring-security-4.0.xsd">

    <beans:bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource">
        <beans:property name="userPropertyToUse" value="salt"/>
    </beans:bean>

    <beans:bean id="myAccessDeniedHandler" class="com.tuotiansudai.api.security.MobileAppAccessDeniedHandler"/>
    <beans:bean id="mobileAppAuthenticationEntryPoint"
                class="com.tuotiansudai.api.security.MobileAppAuthenticationEntryPoint"/>

    <beans:bean id="captchaHelper" class="com.tuotiansudai.util.CaptchaHelper"/>

    <beans:bean id="myDaoAuthenticationProvider" class="com.tuotiansudai.security.MyDaoAuthenticationProvider">
        <beans:property name="passwordEncoder" ref="myShaPasswordEncoder"/>
        <beans:property name="saltSource" ref="saltSource"/>
        <beans:property name="userDetailsService" ref="myUserDetailsService"/>
        <beans:property name="usernameParameter" value="j_username"/>
        <beans:property name="enableCaptchaVerify" value="false"/>
    </beans:bean>

    <beans:bean id="mobileAppTokenProvider" class="com.tuotiansudai.api.security.MobileAppTokenProvider">
        <beans:property name="tokenExpiredSeconds" value="${mobile.app.token.expire.seconds}"/>
    </beans:bean>

    <beans:bean id="mobileAppAuthenticationSuccessHandler"
                class="com.tuotiansudai.api.security.MobileAppAuthenticationSuccessHandler"/>
    <beans:bean id="mobileAppAuthenticationFailureHandler"
                class="com.tuotiansudai.api.security.MobileAppAuthenticationFailureHandler"/>
    <beans:bean id="mobileAppLogoutSuccessHandler" class="com.tuotiansudai.api.security.MobileAppLogoutSuccessHandler"/>

    <beans:bean id="tokenFilter" class="com.tuotiansudai.api.security.MobileAppAuthenticationTokenProcessingFilter">
        <beans:property name="ignoreUrls" value="/login"/>
        <beans:property name="refreshTokenUrl" value="/refresh-token"/>
    </beans:bean>

    <beans:bean id="loginFilter" class="com.tuotiansudai.api.security.MobileAppUsernamePasswordAuthenticationFilter">
        <beans:property name="authenticationManager" ref="authenticationManager"/>
        <beans:property name="usernameParameter" value="j_username"/>
        <beans:property name="passwordParameter" value="j_password"/>
        <beans:property name="authenticationSuccessHandler" ref="mobileAppAuthenticationSuccessHandler"/>
        <beans:property name="authenticationFailureHandler" ref="mobileAppAuthenticationFailureHandler"/>
    </beans:bean>

    <beans:bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
        <beans:constructor-arg ref="mobileAppLogoutSuccessHandler"/>
        <beans:constructor-arg>
            <beans:list>
                <beans:bean
                        class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>
            </beans:list>
        </beans:constructor-arg>
        <beans:property name="filterProcessesUrl" value="/usermember/logout"/>
    </beans:bean>

    <http auto-config="true" use-expressions="true" disable-url-rewriting="true"
          entry-point-ref="mobileAppAuthenticationEntryPoint">
        <csrf disabled="true"/>
        <access-denied-handler ref="myAccessDeniedHandler"/>
        <custom-filter ref="tokenFilter" position="PRE_AUTH_FILTER"/>
        <custom-filter ref="loginFilter" before="FORM_LOGIN_FILTER"/>
        <custom-filter ref="logoutFilter" before="LOGOUT_FILTER"/>
        <intercept-url pattern="/style/**" access="permitAll()"/>
        <intercept-url pattern="/images/**" access="permitAll()"/>
        <intercept-url pattern="/js/**" access="permitAll()"/>


        <intercept-url pattern="/v1.0/register/sendsms" access="permitAll()" />
        <intercept-url pattern="/v1.0/retrievepassword/sendsms" access="permitAll()" />
        <intercept-url pattern="/v1.0/retrievepassword" access="permitAll()" />
        <intercept-url pattern="/v1.0/validatecaptcha" access="permitAll()" />
        <intercept-url pattern="/v1.0/get/invests" access="permitAll()" />
        <intercept-url pattern="/v1.0/get/loans" access="permitAll()"/>
        <intercept-url pattern="/v1.0/get/loan" access="permitAll()" />
        <intercept-url pattern="/v1.0/get/nodes" access="permitAll()" />
        <intercept-url pattern="/v1.0/get/node" access="permitAll()" />
        <intercept-url pattern="/v1.0/get/version" access="permitAll()" />
        <intercept-url pattern="/v1.0/get/index" access="permitAll()" />


        <intercept-url pattern="/callback/**" access="permitAll()"/>
        <intercept-url pattern="/ad/**" access="permitAll()"/>
        <intercept-url pattern="/v1.0/install-notify" access="permitAll()"/>
        <intercept-url pattern="/v1.0/get/banner" access="permitAll()"/>
        <intercept-url pattern="/v1.0/register" access="permitAll()"/>
        <intercept-url pattern="/**" access="isAuthenticated()"/>
        <!--<intercept-url pattern="/**" access="permitAll()"/>-->
    </http>

    <authentication-manager alias="authenticationManager">
        <authentication-provider ref="myDaoAuthenticationProvider"/>
    </authentication-manager>

</beans:beans>