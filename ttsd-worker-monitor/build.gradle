apply plugin: 'java'
apply plugin: 'spring-boot'

sourceCompatibility = 1.8
targetCompatibility = 1.8

buildscript {
    repositories {
        jcenter()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://central.maven.org/maven2/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.0.RELEASE")
    }
    mainClassName = "com.tuotiansudai.worker.monitor.Application"
}

repositories {
    jcenter()
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
    maven { url "http://central.maven.org/maven2/" }
}

springBoot {
    executable = true
}

configurations {
    all*.exclude module: "ttsd-dependency"
    all*.exclude module: "ttsd-mq-client"
    all*.exclude group: "log4j", module: "log4j"
    all*.exclude group: "org.slf4j", module: "slf4j-log4j12"
    all*.exclude group: "mysql", module: "mysql-connector-java"
    all*.exclude group: "com.aliyun.oss", module: "aliyun-sdk-oss"
}

dependencies {
    compile project(':ttsd-client')
    compile "org.springframework.boot:spring-boot-starter"
    compile "org.springframework.boot:spring-boot-starter-data-redis"
    compile "org.springframework.boot:spring-boot-starter-mail"
    compile "com.fasterxml.jackson.core:jackson-core:2.6.1"
    compile "com.fasterxml.jackson.core:jackson-databind:2.6.1"
    compile "com.squareup.okhttp:okhttp:2.7.5"

    testCompile "org.springframework.boot:spring-boot-starter-test"
}


task consumerCheck(dependsOn: ':ttsd-config:classes', type: JavaExec) {
    main = 'com.tuotiansudai.worker.monitor.MQRunningStatusCheck'
    classpath = sourceSets.main.runtimeClasspath

    def propertiesFile = "${project.project(':ttsd-config').buildDir}/resources/main/ttsd-env.properties"
    args = [propertiesFile]
}

processResources {
    def innerConfigPath = "${project.projectDir.getPath()}/src/main/resources"
    def outerConfigPath = "${configPath}/ttsd-worker-monitor"
    if (new File(outerConfigPath).isDirectory()) {
        innerConfigPath = outerConfigPath
    }
    from("${innerConfigPath}") {
        into '/'
    }
}
