<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tuotiansudai.repository.mapper.FeedbackMapper">

    <cache eviction="LRU" type="com.tuotiansudai.cache.MybatisRedisCache"/>

    <resultMap id="feedbackResultMap" type="FeedbackModel">
        <id column="id" property="id"></id>
        <result column="login_name" property="loginName"></result>
        <result column="content" property="content"></result>
        <result column="source" property="source"></result>
        <result column="type" property="type"></result>
        <result column="status" property="status"></result>
        <result column="remark" property="remark"></result>
        <result column="created_time" property="createdTime"></result>
    </resultMap>

    <insert id="create" parameterType="FeedbackModel" useGeneratedKeys="true" keyProperty="id">
        insert into feedback(`login_name`, `contact`, `source`, `type`, `content`, `remark`, `status`, `created_time`)
        value(#{loginName},#{contact},#{source},#{type},#{content},#{remark},#{status},#{createdTime})
    </insert>

    <select id="findAll" parameterType="map" resultMap="feedbackResultMap">
        select * from feedback
        <where>
            <if test="mobile != null and mobile != ''">
                and feedback.contact = #{mobile}
            </if>
            <if test="source != null">
                and feedback.source = #{source}
            </if>
            <if test="type != null">
                and feedback.type = #{type}
            </if>
            <if test="status != null">
                and feedback.status = #{status}
            </if>
            <if test="startTime != null">
                and feedback.created_time > #{startTime}
            </if>
            <if test="endTime != null">
                and feedback.created_time &lt; #{endTime}
            </if>
        </where>
        order by feedback.created_time desc
        limit #{rowLimit}
        offset #{rowIndex}
    </select>

    <select id="findAllCount" parameterType="map" resultType="long">
        select count(1) from feedback
        <where>
            <if test="mobile != null and mobile != ''">
                and feedback.contact = #{mobile}
            </if>
            <if test="source != null">
                and feedback.source = #{source}
            </if>
            <if test="type != null">
                and feedback.type = #{type}
            </if>
            <if test="status != null">
                and feedback.status = #{status}
            </if>
            <if test="startTime != null">
                and feedback.created_time > #{startTime}
            </if>
            <if test="endTime != null">
                and feedback.created_time &lt; #{endTime}
            </if>
        </where>
    </select>

    <update id="updateStatus" parameterType="map">
        update feedback set status = #{status} where id = #{feedbackId}
    </update>

    <update id="updateRemark" parameterType="map">
        update feedback set
          `contact` = #{contact},
          `source` = #{source},
          `type` = #{type},
          `content` = #{content},
          `status` = #{status},
          `remark` = #{remark}
        where `id` = #{id}
    </update>

    <select id="findById" parameterType="map" resultMap="feedbackResultMap">
        select * from feedback where id = #{feedbackId}
    </select>
</mapper>