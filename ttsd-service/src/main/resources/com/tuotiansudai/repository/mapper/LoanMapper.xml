<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tuotiansudai.repository.mapper.LoanMapper">

    <resultMap id="loanResultMap" type="LoanModel">
        <id column="id" property="id"></id>
        <result column="name" property="name"></result>
        <result column="agent_login_name" property="agentLoginName"></result>
        <result column="loaner_login_name" property="loanerLoginName"></result>
        <result column="type" property="type"></result>
        <result column="periods" property="periods"></result>
        <result column="loan_amount" property="loanAmount"></result>
        <result column="description_text" property="descriptionText"></result>
        <result column="description_html" property="descriptionHtml"></result>
        <result column="base_rate" property="baseRate"></result>
        <result column="loan_amount" property="loanAmount"></result>
        <result column="invest_fee_rate" property="investFeeRate"></result>
        <result column="min_invest_amount" property="minInvestAmount"></result>
        <result column="invest_increasing_amount" property="investIncreasingAmount"></result>
        <result column="max_invest_amount" property="maxInvestAmount"></result>
        <result column="activity_type" property="activityType"></result>
        <result column="activity_rate" property="activityRate"></result>
        <result column="contract_id" property="contractId"></result>
        <result column="fundraising_start_time" property="fundraisingStartTime"></result>
        <result column="fundraising_end_time" property="fundraisingEndTime"></result>
        <result column="show_on_home" property="showOnHome"></result>
        <result column="created_time" property="createdTime"></result>
        <result column="verify_time" property="verifyTime"></result>
        <result column="recheck_time" property="recheckTime"></result>
        <result column="status" property="status"></result>
        <result column="loan_amount" property="loanAmount"></result>
        <result column="next_repay_date" property="nextRepayDate"></result>
        <result column="completed_date" property="completedDate"></result>
        <result column="unpaid_amount" property="unpaidAmount"></result>
        <result column="expected_repay_amount" property="expectedRepayAmount"></result>
        <result column="actual_repay_amount" property="actualRepayAmount"></result>
    </resultMap>

    <insert id="create" parameterType="com.tuotiansudai.repository.model.LoanModel">
        insert into loan(id,name,agent_login_name,loaner_login_name,type,periods,description_text,description_html,base_rate,loan_amount,invest_fee_rate,min_invest_amount,invest_increasing_amount,max_invest_amount,activity_type,activity_rate,contract_id,fundraising_start_time,fundraising_end_time,show_on_home,created_time,status)
        values(#{id},#{name},#{agentLoginName},#{loanerLoginName},#{type},#{periods},#{descriptionText},#{descriptionHtml},#{baseRate},#{loanAmount},#{investFeeRate},#{minInvestAmount},#{investIncreasingAmount},#{maxInvestAmount}, #{activityType},#{activityRate},#{contractId}, #{fundraisingStartTime}, #{fundraisingEndTime},#{showOnHome},#{createdTime},#{status})
    </insert>

    <select id="findById" parameterType="long" resultMap="loanResultMap">
        select * from loan where id = #{loanId}
    </select>

    <select id="findByStatus" resultMap="loanResultMap">
        select * from loan where status = #{status}
    </select>

    <select id="findRepayingPaginationByLoanerLoginName" parameterType="map" resultMap="loanResultMap">
        select *,
        (select min(loan_repay.repay_date)
        from loan_repay
        where loan.id=loan_repay.loan_id and loan_repay.status = 'REPAYING') as next_repay_date,
        (select sum(loan_repay.corpus) + sum(loan_repay.expected_interest) + sum(loan_repay.default_interest)
        from loan_repay
        where loan.id=loan_repay.loan_id and loan_repay.status != 'COMPLETE' ) as unpaid_amount
        from loan
        where loaner_login_name = #{loanerLoginName} and status = 'REPAYING'
        and (select min(loan_repay.repay_date) from loan_repay where loan.id=loan_repay.loan_id and loan_repay.status = 'REPAYING') between #{startTime} and #{endTime}
        order by next_repay_date asc, id asc
        limit #{index}, #{pageSize}
    </select>

    <select id="findCountRepayingByLoanerLoginName" parameterType="map" resultType="long">
        select count(1) from loan
        where loaner_login_name = #{loanerLoginName} and status = 'REPAYING'
        and (select min(loan_repay.repay_date) from loan_repay where loan.id=loan_repay.loan_id and loan_repay.status = 'REPAYING') between #{startTime} and #{endTime}
    </select>

    <select id="findCompletedPaginationByLoanerLoginName" parameterType="map" resultMap="loanResultMap">
        select *,
        (select max(loan_repay.repay_date)
        from loan_repay
        where loan.id=loan_repay.loan_id) as completed_date,
        (select sum(loan_repay.corpus) + sum(loan_repay.expected_interest)
        from loan_repay
        where loan.id=loan_repay.loan_id) as expected_repay_amount,
        (select sum(loan_repay.corpus) + sum(loan_repay.actual_interest) + sum(loan_repay.default_interest)
        from loan_repay
        where loan.id=loan_repay.loan_id) as actual_repay_amount
        from loan
        where loaner_login_name = #{loanerLoginName} and status = 'COMPLETE'
        and (select max(loan_repay.repay_date) from loan_repay where loan.id=loan_repay.loan_id) between #{startTime} and #{endTime}
        order by completed_date desc, id asc
        limit #{index}, #{pageSize}
    </select>

    <select id="findCountCompletedByLoanerLoginName" parameterType="map" resultType="long">
        select count(1) from loan
        where loaner_login_name = #{loanerLoginName} and status = 'COMPLETE'
        and (select max(loan_repay.repay_date) from loan_repay where loan.id=loan_repay.loan_id) between #{startTime} and #{endTime}
    </select>

    <select id="findCanceledPaginationByLoanerLoginName" parameterType="map" resultMap="loanResultMap">
        select * from loan
        where loaner_login_name = #{loanerLoginName} and status = 'CANCEL' and recheck_time between #{startTime} and #{endTime}
        order by recheck_time desc, id asc
        limit #{index}, #{pageSize}
    </select>

    <select id="findCountCanceledByLoanerLoginName" parameterType="map" resultType="long">
        select count(1) from loan
        where loaner_login_name = #{loanerLoginName} and status = 'CANCEL' and recheck_time between #{startTime} and #{endTime}
    </select>

    <update id="update" parameterType="com.tuotiansudai.repository.model.LoanModel">
        update loan
        <trim prefix="set" suffixOverrides=",">
            <if test="name !=null and name!=''">
                name = #{name},
            </if>
            <if test="agentLoginName !=null and agentLoginName!=''">
                agent_login_name = #{agentLoginName},
            </if>
            <if test="loanerLoginName !=null and loanerLoginName!=''">
                loaner_login_name = #{loanerLoginName},
            </if>
            <if test="type !=null">
                type = #{type},
            </if>
            <if test="periods !=null and periods!=''">
                periods = #{periods},
            </if>
            <if test="descriptionText !=null and descriptionText!=''">
                description_text = #{descriptionText},
            </if>
            <if test="descriptionHtml !=null and descriptionHtml!=''">
                description_html = #{descriptionHtml},
            </if>
            <if test="loanAmount !=null and loanAmount!=''">
                loan_amount = #{loanAmount},
            </if>
            <if test="investFeeRate !=null and investFeeRate!=''">
                invest_fee_rate = #{investFeeRate},
            </if>
            <if test="minInvestAmount !=null and minInvestAmount!=''">
                min_invest_amount = #{minInvestAmount},
            </if>
            <if test="investIncreasingAmount !=null and investIncreasingAmount!=''">
                invest_increasing_amount = #{investIncreasingAmount},
            </if>
            <if test="maxInvestAmount !=null and maxInvestAmount!=''">
                max_invest_amount = #{maxInvestAmount},
            </if>
            <if test="activityType !=null">
                activity_type = #{activityType},
            </if>
            <if test="activityRate !=null and activityRate!=''">
                activity_rate = #{activityRate},
            </if>
            <if test="contractId !=null and contractId!=''">
                contract_id = #{contractId},
            </if>
            <if test="fundraisingStartTime !=null">
                fundraising_start_time = #{fundraisingStartTime},
            </if>
            <if test="fundraisingEndTime !=null">
                fundraising_end_time = #{fundraisingEndTime},
            </if>
            <if test="showOnHome !=null">
                show_on_home = #{showOnHome},
            </if>
            <if test="verifyTime !=null">
                verify_time = #{verifyTime},
            </if>
            <if test="recheckTime !=null">
                recheck_time = #{recheckTime},
            </if>
            <if test="status !=null">
                status = #{status}
            </if>
        </trim>
        where id = #{id}
    </update>

    <update id="updateStatus" parameterType="map">
        update loan set status = #{status} where id = #{loanId}
    </update>

</mapper>