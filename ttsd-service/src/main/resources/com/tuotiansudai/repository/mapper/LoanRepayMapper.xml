<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tuotiansudai.repository.mapper.LoanRepayMapper">

    <cache eviction="LRU" type="com.tuotiansudai.cache.MybatisRedisCache" />

    <resultMap id="loanRepayResultMap" type="LoanRepayModel">
        <id column="id" property="id"/>
        <result column="loan_id" property="loanId"/>
        <result column="corpus" property="corpus"/>
        <result column="expected_interest" property="expectedInterest"/>
        <result column="actual_interest" property="actualInterest"/>
        <result column="default_interest" property="defaultInterest"/>
        <result column="repay_amount" property="repayAmount"/>
        <result column="period" property="period"/>
        <result column="repay_date" property="repayDate"/>
        <result column="actual_repay_date" property="actualRepayDate"/>
        <result column="status" property="status"/>
        <result column="created_time" property="createdTime"/>
    </resultMap>


    <resultMap id="loanRepayResultMapWithLoanResultMap" type="LoanRepayModel">
        <id column="loan_repay_id" property="id"/>
        <result column="loan_repay_loan_id" property="loanId"/>
        <result column="corpus" property="corpus"/>
        <result column="expected_interest" property="expectedInterest"/>
        <result column="actual_interest" property="actualInterest"/>
        <result column="default_interest" property="defaultInterest"/>
        <result column="repay_amount" property="repayAmount"/>
        <result column="period" property="period"/>
        <result column="repay_date" property="repayDate"/>
        <result column="actual_repay_date" property="actualRepayDate"/>
        <result column="loan_repay_status" property="status"/>
        <result column="loan_repay_created_time" property="createdTime"/>
        <association property="loan" javaType="com.tuotiansudai.repository.model.LoanModel">
            <id column="loan_id" property="id"/>
            <result column="name" property="name"></result>
            <result column="agent_login_name" property="agentLoginName"></result>
            <result column="loaner_login_name" property="loanerLoginName"></result>
            <result column="type" property="type"></result>
            <result column="periods" property="periods"></result>
            <result column="loan_amount" property="loanAmount"></result>
            <result column="description_text" property="descriptionText"></result>
            <result column="description_html" property="descriptionHtml"></result>
            <result column="base_rate" property="baseRate"></result>
            <result column="loan_amount" property="loanAmount"></result>
            <result column="invest_fee_rate" property="investFeeRate"></result>
            <result column="min_invest_amount" property="minInvestAmount"></result>
            <result column="invest_increasing_amount" property="investIncreasingAmount"></result>
            <result column="max_invest_amount" property="maxInvestAmount"></result>
            <result column="activity_type" property="activityType"></result>
            <result column="activity_rate" property="activityRate"></result>
            <result column="contract_id" property="contractId"></result>
            <result column="fundraising_start_time" property="fundraisingStartTime"></result>
            <result column="fundraising_end_time" property="fundraisingEndTime"></result>
            <result column="show_on_home" property="showOnHome"></result>
            <result column="loan_created_time" property="createdTime"></result>
            <result column="verify_time" property="verifyTime"></result>
            <result column="recheck_time" property="recheckTime"></result>
            <result column="loan_status" property="status"></result>
            <result column="loan_amount" property="loanAmount"></result>
        </association>
    </resultMap>

    <sql id="columns">
        id, loan_id, corpus, default_interest, expected_interest, actual_interest, repay_amount, period, repay_date, actual_repay_date, status, created_time
    </sql>

    <insert id="create" parameterType = "java.util.List">
        insert into loan_repay ( <include refid="columns"></include> )
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.id},#{item.loanId},#{item.corpus},#{item.defaultInterest},#{item.expectedInterest},#{item.actualInterest},#{item.repayAmount},#{item.period},#{item.repayDate},#{item.actualRepayDate},#{item.status},#{item.createdTime})
        </foreach>
    </insert>

    <select id="findLoanRepayPagination" parameterType="map" resultMap="loanRepayResultMapWithLoanResultMap">
        select *, a.id as loan_repay_id, a.loan_id as loan_repay_loan_id, b.id as loan_id, a.status as loan_repay_status, b.status as loan_status, a.created_time as loan_repay_created_time, b.created_time as loan_created_time
        from loan_repay a join loan b on a.loan_id = b.id
        <where>
            <if test="loanId != null">
              a.loan_id = #{loanId}
            </if>
            <if test="loginName != null and loginName != ''">
                <![CDATA[and b.loaner_login_name like '${loginName}%']]>
            </if>
            <if test="startTime != null" >
                and a.repay_date &gt;= #{startTime}
            </if>
            <if test="endTime != null">
                and a.repay_date &lt;= #{endTime}
            </if>

            <if test="repayStatus != null">
                and a.status = #{repayStatus}
            </if>
        </where>
        order by a.repay_date asc
        limit #{index}, #{pageSize}
    </select>

    <select id="findLoanRepayCount" parameterType="map" resultType="int">
        select count(1) from loan_repay a join loan b on a.loan_id = b.id
        <where>
            <if test="loanId !=null ">
                a.loan_id = #{loanId}
            </if>
            <if test="loginName !=null and loginName != '' ">
                <![CDATA[and b.loaner_login_name like '${loginName}%']]>
            </if>
            <if test="startTime !=null" >
                and a.repay_date >= #{startTime}
            </if>
            <if test="endTime !=null ">
                and a.repay_date &lt;= #{endTime}
            </if>

            <if test="repayStatus !=null">
                and a.status  = #{repayStatus}
            </if>
        </where>
    </select>

    <select id="findById" parameterType="long" resultMap="loanRepayResultMap">
        select * from loan_repay where id = #{id}
    </select>

    <select id="findByLoanIdOrderByPeriodAsc" parameterType="long" resultMap="loanRepayResultMap">
        select * from loan_repay where loan_id = #{loanId} order by period asc
    </select>

    <select id="findByAgentAndLoanId" parameterType="map" resultMap="loanRepayResultMap">
        select loan_repay.* from loan_repay join loan on loan_repay.loan_id = loan.id
        where loan.id= #{loanId} and loan.agent_login_name = #{agentLoginName}
        order by period asc
    </select>

    <select id="findEnabledLoanRepayByLoanId" parameterType="long" resultMap="loanRepayResultMap" useCache="false">
        select *
        from
            loan_repay enabled_repay
        where
            enabled_repay.loan_id = #{loanId}
            and ((exists(select 1 from loan where loan.id = #{loanId} and status = 'REPAYING')
                 and enabled_repay.status in ('REPAYING', 'WAIT_PAY')
                 and date(enabled_repay.repay_date) = date(now()))
                or
                 (exists(select 1 from loan where loan.id = #{loanId} and status = 'OVERDUE')
                 and enabled_repay.status in ('OVERDUE', 'WAIT_PAY')
                 and enabled_repay.period = (select max(period)
                                             from loan_repay overdue_repay
                                             where overdue_repay.loan_id = #{loanId} and
                                                   overdue_repay.status in ('OVERDUE', 'WAIT_PAY'))))
    </select>

    <select id="findByLoanIdAndPeriod" parameterType="map" resultMap="loanRepayResultMap">
        select * from loan_repay where loan_id = #{loanId} and period = #{period}
    </select>

    <select id="findLastLoanRepay" parameterType="long" resultMap="loanRepayResultMap">
        select * from loan_repay where loan_id = #{loanId} and period = (select periods from loan where id = #{loanId})
    </select>

    <select id="findByLoanIdAndLTPeriod" parameterType="map" resultMap="loanRepayResultMap">
        select * from loan_repay where loan_id = #{loanId} and period &lt; #{period}
    </select>

    <select id="findWaitPayLoanRepayByLoanId" parameterType="long" resultMap="loanRepayResultMap">
        select * from loan_repay where loan_id = #{loanId} and status = 'WAIT_PAY'
    </select>

    <select id="findCurrentLoanRepayByLoanId" parameterType="long" resultMap="loanRepayResultMap">
        select *
        from loan_repay
        where loan_id = #{loanId}
              and loan_repay.period = (select min(period)
                                       from loan_repay future_repay join loan on future_repay.loan_id = loan.id
                                       where future_repay.loan_id = #{loanId}
                                             and date(now()) >= date(loan.recheck_time)
                                             and date(future_repay.repay_date) >= date(now()))
    </select>

    <update id="update" parameterType="LoanRepayModel">
        update loan_repay
        set expected_interest = #{expectedInterest},
            repay_date = #{repayDate},
            actual_interest = #{actualInterest},
            actual_repay_date = #{actualRepayDate},
            default_interest = #{defaultInterest},
            repay_amount = #{repayAmount},
            status = #{status}
        where id = #{id}
    </update>

    <select id="findByLoginNameAndTimeSuccessRepay" parameterType="map" resultType="long">
        SELECT
          IFNULL(SUM(
            t.`corpus` + t.`default_interest` + t.`expected_interest`
          ),0)
        FROM
          loan_repay t
          JOIN loan l
            ON t.`loan_id` = l.`id`
            AND l.`status` != 'COMPLETE'
            AND l.`agent_login_name` = #{loginName}
        WHERE t.`status` IN (
                'REPAYING',
                'WAIT_PAY',
                'OVERDUE'
              )
            AND t.`repay_date` BETWEEN #{startTime}
            AND #{endTime}
    </select>

    <select id="findByLoginNameAndTimeRepayList" parameterType="map" resultMap="loanRepayResultMapWithLoanResultMap">
        SELECT
          m.`id` as`loan_id`,
          m.`name`,
          m.`base_rate`,
          m.`activity_rate`,
          m.`periods`,
          n.`period`,
          n.`status` AS `loan_repay_status`,
          n.`corpus`,
          n.`actual_interest`,
          n.`expected_interest`,
          n.`default_interest`,
          n.`repay_amount`,
          n.`actual_repay_date`,
          n.`repay_date`,
          n.`id` as `loan_repay_id`,
          m.`type`
        FROM
          `loan` m
          JOIN
            ( SELECT
              t.`id`,
              l.`id` AS `loanId`,
              t.`period`,
              t.`status`,
              t.`corpus`,
              t.`actual_interest`,
              t.`expected_interest`,
              t.`default_interest`,
              t.`repay_amount`,
              t.`actual_repay_date`,
              t.`repay_date`,
              t.`repay_date` AS `repayTime`
            FROM
              `loan_repay` t
              JOIN `loan` l
                ON t.`loan_id` = l.`id`
                AND l.`status` != 'COMPLETE'
                AND l.`agent_login_name` = #{loginName}
            WHERE t.`status` IN (
                'REPAYING',
                'WAIT_PAY',
                'OVERDUE'
              )
              AND t.`repay_date` BETWEEN #{startTime}
              AND #{endTime}) n
            ON n.loanId = m.`id`
        ORDER BY n.`repayTime` desc
        LIMIT #{startLimit}, #{endLimit}
    </select>

    <select id="sumSuccessLoanRepayMaxPeriod" parameterType="map" resultType="long">
        select IFNULL(max(period),0)
        from loan_repay
        where loan_id = #{loanId}
        and status = 'COMPLETE'
    </select>

    <select id="findNotCompleteLoanRepay" resultMap="loanRepayResultMap">
        select * from loan_repay where status != 'COMPLETE'
    </select>


    <resultMap id="loanRepayNotifyResultMap" type="LoanRepayNotifyModel">
        <result column="repay_amount" property="repayAmount"/>
        <result column="loan_name" property="loanName"/>
        <result column="mobile" property="mobile"/>
        <result column="loan_id" property="loanId"/>
        <result column="id" property="id"/>

    </resultMap>

    <select id="findLoanRepayNotifyToday" parameterType="map" resultMap="loanRepayNotifyResultMap" useCache="false">
        select
            lr.repay_amount as repay_amount,
            l.name as loan_name,
            u.mobile,
            l.id as loan_id,
            lr.id
        from
            loan_repay lr
            join loan l on l.id = lr.loan_id
            join user u on u.login_name = l.agent_login_name
        where
            lr.status='REPAYING'
            and date_format(lr.repay_date,'%Y-%m-%d') = #{today};
    </select>
</mapper>