<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tuotiansudai.repository.mapper.InvestMapper">

    <resultMap id="investResultMap" type="InvestModel">
        <id column="id" property="id"></id>
        <result column="login_name" property="loginName"></result>
        <result column="loan_id" property="loanId"></result>
        <result column="amount" property="amount"></result>
        <result column="status" property="status"></result>
        <result column="source" property="source"></result>
        <result column="is_auto_invest" property="isAutoInvest"></result>
        <result column="created_time" property="createdTime"></result>
    </resultMap>

    <sql id="columns">
        id, login_name, loan_id, amount, status, source, is_auto_invest, created_time
    </sql>

    <insert id="create" parameterType="InvestModel">
        insert into invest ( <include refid="columns"></include> )
        value(#{id}, #{loginName}, #{loanId}, #{amount}, #{status}, #{source}, #{isAutoInvest}, #{createdTime})
    </insert>

    <update id="update" parameterType="investModel">
        update invest set
        login_name = #{loginName},
        loan_id = #{loanId},
        amount = #{amount},
        status = #{status},
        source = #{source},
        is_auto_invest = #{isAutoInvest},
        created_time = #{createdTime}
        where id = #{id}
    </update>

    <update id="updateStatus" parameterType="map">
        update invest set status = #{status} where id = #{id}
    </update>

    <select id="findById" parameterType="long" resultMap="investResultMap">
        select <include refid="columns"></include>
        from invest
        where id = #{id}
    </select>

    <select id="findByLoginNameOrderByTime" parameterType="map" resultMap="investResultMap">
        select <include refid="columns"></include>
        from invest
        where login_name = #{loginName}
        order by created_time
        ${sortStyle}
    </select>

    <select id="findByLoanIdOrderByTime" parameterType="map" resultMap="investResultMap">
        select <include refid="columns"></include>
        from invest
        where loan_id = #{loanId}
        order by created_time
        ${sortStyle}
    </select>

    <select id="sumSuccessInvestAmount" parameterType="long" resultType="long">
        select COALESCE(sum(amount),0)
        from invest
        where loan_id = #{loanId}
        and status not in ('WAITING','FAIL')
    </select>

    <select id="getInvests" parameterType="map" resultMap="investResultMap">
        select *
        from invest
        where loan_id = #{loanId}
        and status = ${status}
        limit (#{index} - 1) * #{pageSize},#{pageSize}
    </select>

</mapper>