<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tuotiansudai.repository.mapper.InvestMapper">

    <resultMap id="investResultMap" type="InvestModel">
        <id column="id" property="id"></id>
        <result column="login_name" property="loginName"></result>
        <result column="loan_id" property="loanId"></result>
        <result column="amount" property="amount"></result>
        <result column="status" property="status"></result>
        <result column="source" property="source"></result>
        <result column="is_auto_invest" property="isAutoInvest"></result>
        <result column="created_time" property="createdTime"></result>
    </resultMap>

    <sql id="columns">
        id, login_name, loan_id, amount, status, source, is_auto_invest, created_time
    </sql>

    <insert id="create" parameterType="InvestModel">
        insert into invest ( <include refid="columns"></include> )
        value(#{id}, #{loginName}, #{loanId}, #{amount}, #{status}, #{source}, #{isAutoInvest}, #{createdTime})
    </insert>

    <update id="updateStatus" parameterType="map">
        update invest set status = #{status} where id = #{id}
    </update>

    <select id="findById" parameterType="long" resultMap="investResultMap">
        select <include refid="columns"></include>
        from invest
        where id = #{id}
    </select>

    <select id="findByLoginNameOrderByTime" parameterType="map" resultMap="investResultMap">
        select <include refid="columns"></include>
        from invest
        where login_name = #{loginName}
        order by created_time
        ${sortStyle}
    </select>

    <select id="findByLoanId" parameterType="map" resultMap="investResultMap">
        select <include refid="columns"></include>
        from invest
        where loan_id = #{loanId}
    </select>

    <select id="sumSuccessInvestAmount" parameterType="map" resultType="long">
        select IFNULL(sum(amount),0)
        from invest
        where loan_id = #{loanId}
        and status = 'SUCCESS'
    </select>

    <select id="findByStatus" parameterType="map" resultMap="investResultMap">
        select <include refid="columns"></include>
        from invest
        where loan_id = #{loanId}
        and status = '${status}'
        order by created_time desc
        limit #{index},#{pageSize}
    </select>

    <select id="findCountByStatus" parameterType="map" resultType="int">
        select count(1)
        from invest
        where loan_id = #{loanId}
        and status = '${status}'
    </select>

    <select id="findSuccessInvests" parameterType="long" resultMap="investResultMap">
        select <include refid="columns"></include>
        from invest
        where loan_id = #{loanId}
        and status = 'SUCCESS'
    </select>

    <update id="cleanWaitingInvestBefore" parameterType="map">
        update invest set status = 'FAIL'
        where loan_id = #{loanId}
        and status = 'WAITING'
        and created_time &lt; #{beforeTime}
    </update>

    <select id="findWaitingInvestCountAfter" parameterType="map" resultType="int">
        select count(*)
        from invest
        where loan_id = #{loanId}
        and status = 'WAITING'
        and created_time &gt;= #{afterTime}
    </select>
</mapper>