<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tuotiansudai.transfer.repository.mapper.TransferApplicationMapper">

    <cache eviction="LRU" type="com.tuotiansudai.cache.MybatisRedisCache"/>

    <resultMap id="transferApplicationResultMap" type="TransferApplicationModel">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="loan_id" property="loanId"/>
        <result column="transfer_invest_id" property="transferInvestId"/>
        <result column="invest_id" property="investId"/>
        <result column="period" property="period"/>
        <result column="login_name" property="loginName"/>
        <result column="invest_amount" property="investAmount"/>
        <result column="transfer_amount" property="transferAmount"/>
        <result column="transfer_fee" property="transferFee"/>
        <result column="status" property="status"/>
        <result column="deadline" property="deadline"/>
        <result column="transfer_time" property="transferTime"/>
        <result column="application_time" property="applicationTime"/>
        <result column="left_period" property="leftPeriod"/>
        <result column="source" property="source"/>
    </resultMap>

    <resultMap id="transferApplicationRecordDtoMap" type="TransferApplicationRecordDto">
        <result column="id" property="transferApplicationId"/>
        <result column="name" property="name"/>
        <result column="transfer_amount" property="transferAmount"/>
        <result column="invest_id" property="investId"/>
        <result column="invest_amount" property="investAmount"/>
        <result column="transfer_time" property="transferTime"/>
        <result column="base_rate" property="baseRate"/>
        <result column="activity_rate" property="activityRate"/>
        <result column="status" property="transferStatus"/>
        <result column="loan_id" property="loanId"/>
        <result column="transferrer_mobile" property="transferrerMobile"/>
        <result column="transferee_mobile" property="transfereeMobile"/>
        <result column="transfer_fee" property="transferFee"/>
        <result column="transfer_invest_id" property="transferInvestId"/>
        <result column="period" property="period"/>
        <result column="left_period" property="leftPeriod"/>
        <result column="deadline" property="deadLine"/>
        <result column="application_time" property="applicationTime"/>
        <result column="source" property="source"/>
    </resultMap>

    <resultMap id="transferableInvestPaginationItemDataDtoMap" type="TransferableInvestPaginationItemDataDto">
        <result column="loan_id" property="loanId"/>
        <result column="invest_id" property="investId"/>
        <result column="loan_name" property="loanName"/>
        <result column="amount" property="amount"/>
        <result column="next_repay_date" property="nextRepayDate"/>
        <result column="next_repay_amount" property="nextRepayAmount"/>
        <result column="create_time" property="createdTime"/>
        <result column="base_rate" property="baseRate"/>
        <result column="activity_rate" property="activityRate"/>
    </resultMap>

    <insert id="create" parameterType="TransferApplicationModel" useGeneratedKeys="true" keyProperty="id">
        insert into transfer_application (name, loan_id, transfer_invest_id, invest_id, period, login_name,
        invest_amount, transfer_amount, transfer_fee, status, deadline, transfer_time,
        application_time,left_period,source)
        value (#{name}, #{loanId}, #{transferInvestId}, #{investId}, #{period}, #{loginName}, #{investAmount},
        #{transferAmount}, #{transferFee}, #{status}, #{deadline}, #{transferTime}, #{applicationTime}, #{leftPeriod},
        #{source})
    </insert>

    <select id="findByTransferInvestId" parameterType="map" resultMap="transferApplicationResultMap">
        select * from transfer_application
        <where>
            <if test="transferInvestId != null">
                transfer_invest_id = #{transferInvestId}
            </if>
            <if test="transferStatusList != null and transferStatusList.size != 0">
                and status in
                <foreach item="item" index="index" collection="transferStatusList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>

        </where>
    </select>

    <select id="findTransferApplicationPaginationByLoginName" parameterType="map"
            resultMap="transferApplicationRecordDtoMap">
        select
        ta.id,ta.name,ta.loan_id,ta.transfer_amount,ta.transfer_invest_id,
        ta.invest_amount,ta.transfer_time,ta.status,ta.deadline,ta.left_period,l.base_rate,l.activity_rate
        from transfer_application ta JOIN loan l on ta.loan_id = l.id
        <where>
            <if test="loginName != null">
                ta.login_name = #{loginName}
            </if>
            <if test="transferStatusList != null and transferStatusList.size != 0">
                and ta.status in
                <foreach item="item" index="i" collection="transferStatusList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>

        </where>
        order by case ta.status when 'TRANSFERRING' then '1' when 'SUCCESS' then '2' when 'CANCEL' then '3' else '4'
        end,ta.application_time desc
        limit #{index}, #{pageSize}
    </select>

    <select id="findCountTransferApplicationPaginationByLoginName" parameterType="map" resultType="int">
        select count(1) from transfer_application ta JOIN loan l on ta.loan_id = l.id
        <where>
            <if test="loginName != null">
                ta.login_name = #{loginName}
            </if>
            <if test="transferStatusList != null and transferStatusList.size != 0">
                and ta.status in
                <foreach item="item" index="i" collection="transferStatusList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>

        </where>
    </select>

    <select id="findTransfereeApplicationPaginationByLoginName" parameterType="map"
            resultMap="transferApplicationRecordDtoMap">
        select
        ta.id,ta.name,ta.transfer_amount,ta.invest_id,ta.invest_amount,ta.transfer_time,ta.status,ta.deadline,ta.left_period,l.base_rate,l.activity_rate,
        ta.transfer_invest_id
        from transfer_application ta JOIN invest i on ta.invest_id = i.id JOIN loan l on l.id = ta.loan_id
        <where>
            <if test="loginName != null">
                i.login_name = #{loginName}
            </if>
            AND ta.status = 'SUCCESS'
        </where>
        order by ta.transfer_time desc
        limit #{index}, #{pageSize}
    </select>

    <select id="findCountTransfereeApplicationPaginationByLoginName" parameterType="map" resultType="int">
        select count(*) from transfer_application ta JOIN invest i on ta.invest_id = i.id JOIN loan l on l.id =
        ta.loan_id
        <where>
            <if test="loginName != null">
                i.login_name = #{loginName}
            </if>
            AND ta.status = 'SUCCESS'
        </where>
    </select>

    <select id="findTransferApplicationPaginationList" parameterType="map" resultMap="transferApplicationRecordDtoMap">
        SELECT ta.id, ta.name, ta.transfer_amount, ta.invest_id,ta.invest_amount, ta.transfer_time, ta.status,
        ta.loan_id, u1.mobile
        AS transferrer_mobile,
        ta.transfer_fee, ta.transfer_invest_id, ta.period, ta.left_period, ta.deadline, ta.application_time, u2.mobile
        AS transferee_mobile, ta.source AS source
        FROM
        (transfer_application ta JOIN aa.user u1 ON ta.login_name = u1.login_name)
        left JOIN
        (invest i JOIN aa.user u2 ON i.login_name = u2.login_name)
        ON ta.invest_id = i.id
        <where>
            <if test="transferApplicationId != null">
                ta.id = #{transferApplicationId}
            </if>
            <if test="startTime != null">
                AND ta.application_time >= #{startTime}
            </if>
            <if test="endTime != null">
                <![CDATA[ AND ta.application_time <= #{endTime} ]]>
            </if>
            <if test="status">
                AND ta.status = #{status}
            </if>
            <if test="transferrerMobile != null and transferrerMobile != ''">
                AND u1.mobile = #{transferrerMobile}
            </if>
            <if test="transfereeMobile != null and transfereeMobile != ''">
                AND u2.mobile = #{transfereeMobile}
            </if>
            <if test="loanId != null">
                AND i.loan_id = #{loanId}
            </if>
            <if test="source != null">
                <if test="source.name() == 'MOBILE'">
                    AND (ta.source = 'IOS' OR ta.source = 'ANDROID')
                </if>
                <if test="source.name() != 'MOBILE'">
                    AND ta.source = #{source}
                </if>
            </if>
        </where>
        ORDER BY application_time
        limit #{index}, #{pageSize}
    </select>

    <select id="findAllTransferApplicationPaginationList" parameterType="map"
            resultMap="transferApplicationRecordDtoMap">
        select
        ta.id,ta.name,ta.transfer_amount,ta.invest_id,ta.invest_amount,ta.transfer_time,ta.status,ta.loan_id,ta.invest_id,ta.deadline,
        ta.transfer_invest_id,ta.period,ta.left_period, l.base_rate AS baseRate,l.activity_rate from transfer_application ta left JOIN
        loan l on ta.loan_id = l.id
        <where>
            <if test="transferStatus == null || transferStatus.size == 0">
                and ta.status in ('SUCCESS','TRANSFERRING')
            </if>
            <if test="transferStatus != null and transferStatus.size != 0">
                and ta.status in
                <foreach item="item" index="i" collection="transferStatus" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>

            <if test="rateStart > 0 and rateStart != 0.14">
                and l.base_rate >= #{rateStart}
            </if>
            <if test="rateStart > 0 and rateStart == 0.14">
                and l.base_rate > #{rateStart}
            </if>
            <if test="rateEnd > 0 and rateEnd != 0.14">
                <![CDATA[ and l.base_rate  < #{rateEnd} ]]>
            </if>
            <if test="rateEnd > 0 and rateEnd == 0.14">
                <![CDATA[ and l.base_rate  <= #{rateEnd} ]]>
            </if>
        </where>
        order by
        CASE ta.status WHEN 'TRANSFERRING' THEN '1' WHEN 'SUCCESS' THEN '2' ELSE '3' END,
        CASE ta.status WHEN 'TRANSFERRING' THEN ta.application_time ELSE ta.transfer_time END desc
        limit #{index}, #{pageSize}
    </select>

    <select id="findCountAllTransferApplicationPagination" parameterType="map" resultType="int">

        select count(1)
        from transfer_application ta left JOIN loan l on ta.loan_id = l.id
        <where>

            <if test="transferStatus == null || transferStatus.size == 0">
                and ta.status in ('SUCCESS','TRANSFERRING')
            </if>
            <if test="transferStatus != null and transferStatus.size != 0">
                and ta.status in
                <foreach item="item" index="i" collection="transferStatus" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>

            <if test="rateStart > 0 and rateStart != 0.14">
                and l.base_rate >= #{rateStart}
            </if>
            <if test="rateStart > 0 and rateStart == 0.14">
                and l.base_rate > #{rateStart}
            </if>
            <if test="rateEnd > 0 and rateEnd != 0.14">
                <![CDATA[ and l.base_rate  < #{rateEnd} ]]>
            </if>
            <if test="rateEnd > 0 and rateEnd == 0.14">
                <![CDATA[ and l.base_rate  <= #{rateEnd} ]]>
            </if>
        </where>
    </select>


    <select id="findCountTransferApplicationPagination" parameterType="map" resultType="int">
        select count(1)
        from
        (transfer_application ta JOIN user u1 on ta.login_name = u1.login_name)
        left JOIN
        (invest i JOIN user u2 on i.login_name = u2.login_name)
        ON ta.invest_id = i.id
        <where>
            <if test="transferApplicationId != null">
                ta.id = #{transferApplicationId}
            </if>
            <if test="startTime != null">
                and ta.application_time >= #{startTime}
            </if>
            <if test="endTime != null">
                <![CDATA[ and ta.application_time <= #{endTime} ]]>
            </if>
            <if test="status != null">
                and ta.status = #{status}
            </if>
            <if test="transferrerMobile != null and transferrerMobile != '' ">
                and u1.mobile = #{transferrerMobile}
            </if>
            <if test="transfereeMobile != null and transfereeMobile != ''">
                and u2.mobile = #{transfereeMobile}
            </if>
            <if test="loanId != null">
                and i.loan_id = #{loanId}
            </if>
            <if test="source != null">
                <if test="source.name() == 'MOBILE'">
                    and (ta.source = 'IOS' or ta.source = 'ANDROID')
                </if>
                <if test="source.name() != 'MOBILE'">
                    and ta.source = #{source}
                </if>
            </if>
        </where>
    </select>


    <select id="findByInvestId" parameterType="long" resultMap="transferApplicationResultMap">
        select * from transfer_application where invest_id = #{investId} and status = 'SUCCESS'
    </select>

    <select id="findByTransferInvestIdAndTransferTime" parameterType="long" resultMap="transferApplicationResultMap">
        SELECT * FROM transfer_application WHERE status = 'SUCCESS'
        <if test="loginName != null and loginName != ''">
            AND login_name = #{loginName}
        </if>
        <if test="year != null and year != ''">
            AND DATE_FORMAT(transfer_time, '%Y') = #{year}
        </if>
        <if test="month != null and month != ''">
            AND DATE_FORMAT(transfer_time, '%m') = #{month}
        </if>
        <if test="day != null and day != ''">
            AND DATE_FORMAT(transfer_time, '%Y-%m-%d') = #{day}
        </if>
    </select>

    <update id="update" parameterType="TransferApplicationModel">
        update transfer_application
        set name = #{name},
        loan_id = #{loanId},
        transfer_invest_id = #{transferInvestId},
        invest_id = #{investId},
        period = #{period},
        login_name = #{loginName},
        invest_amount = #{investAmount},
        transfer_amount = #{transferAmount},
        transfer_fee = #{transferFee},
        status = #{status},
        deadline = #{deadline},
        transfer_time = #{transferTime},
        application_time = #{applicationTime},
        left_period = #{leftPeriod}
        where id = #{id}
    </update>

    <select id="findById" parameterType="long" resultMap="transferApplicationResultMap">
        select * from transfer_application where id = #{id}
    </select>


    <resultMap id="transferInvestDetailMap" type="TransferInvestDetailDto">
        <result column="id" property="id"></result>
        <result column="loan_name" property="loanName"></result>
        <result column="transfer_amount" property="transferAmount"></result>
        <result column="invest_amount" property="investAmount"></result>
        <result column="transfer_time" property="transferTime"></result>
        <result column="next_repay_date" property="nextRepayDate"></result>
        <result column="next_repay_amount" property="nextRepayAmount"></result>
        <result column="invest_id" property="investId"></result>
        <result column="transfer_invest_id" property="transferInvestId"></result>
        <result column="transferrer_loginName" property="transferrerLoginName"></result>
        <result column="transferee_loginName" property="transfereeLoginName"></result>
        <result column="loan_id" property="loanId"></result>
    </resultMap>

    <select id="findTransferInvestList" parameterType="map" resultMap="transferInvestDetailMap">
        select
        ta.id as id,
        ta.name as loan_name,
        ta.transfer_amount,
        ta.invest_amount,
        ta.transfer_time,
        (select min(ir.repay_date) from invest_repay ir where ir.invest_id = i.id and ir.status in ('REPAYING',
        'OVERDUE')) as next_repay_date,
        (select ir.expected_interest + ir.corpus - ir.expected_fee
        from invest_repay ir where ir.invest_id = i.id and ir.status in ('REPAYING', 'OVERDUE')
        and ir.period = (select min(ir.period) from invest_repay ir where ir.invest_id = i.id and ir.status in
        ('REPAYING', 'OVERDUE'))
        ) as next_repay_amount,
        i.id as invest_id,
        ta.transfer_invest_id,
        ta.login_name as transferrer_loginName,
        i.login_name as transferee_loginName,
        ta.loan_id
        from invest i
        join transfer_application ta on i.id = ta.invest_id and ta.status = 'SUCCESS'
        <if test="loanStatus != null">
            join loan l on l.id = ta.loan_id and l.status = #{loanStatus}
        </if>
        <where>
            i.login_name = #{investorLoginName}
            <if test="startTime != null &amp;&amp; endTime != null">
                and i.created_time between #{startTime} and #{endTime}
            </if>
        </where>
        order by i.created_time desc, i.id asc
        limit #{index}, #{pageSize}
    </select>

    <select id="findCountInvestTransferPagination" resultType="long" parameterType="map">
        select
        count(1)
        from invest i
        join transfer_application ta on i.id = ta.invest_id and ta.status = 'SUCCESS'
        <if test="loanStatus != null">
            join loan l on l.id = ta.loan_id and l.status = #{loanStatus}
        </if>
        <where>
            i.login_name = #{investorLoginName}
            <if test="startTime != null &amp;&amp; endTime != null">
                and i.created_time between #{startTime} and #{endTime}
            </if>
        </where>
    </select>

    <select id="findCountTransferApplicationByApplicationTime" resultType="long" parameterType="map">
          SELECT count(1) FROM transfer_application  WHERE login_name = #{loginName}
                AND application_time between #{activityBeginTime} and #{tradingTime}
    </select>

    <select id="findAllTransferringApplicationsByLoanId" resultMap="transferApplicationResultMap"
            parameterType="java.lang.Long">
        SELECT
          *
        FROM
          `aa`.`transfer_application`
        WHERE
          loan_id = #{loanId} AND
          status = 'TRANSFERRING'
    </select>
</mapper>