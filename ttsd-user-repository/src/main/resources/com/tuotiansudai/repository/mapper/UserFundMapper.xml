<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tuotiansudai.repository.mapper.UserFundMapper">

    <resultMap id="userFundResultMap" type="UserFundView">
        <result column="balance" property="balance"/>
        <result column="actual_total_interest" property="actualTotalInterest"/>
        <result column="actual_total_extra_interest" property="actualTotalExtraInterest"/>
        <result column="actual_coupon_interest" property="actualCouponInterest"/>
        <result column="refer_reward_amount" property="referRewardAmount"/>
        <result column="red_envelope_amount" property="redEnvelopeAmount"/>
        <result column="expected_total_corpus" property="expectedTotalCorpus"/>
        <result column="expected_total_interest" property="expectedTotalInterest"/>
        <result column="expected_total_extra_interest" property="expectedTotalExtraInterest"/>
        <result column="expected_coupon_interest" property="expectedCouponInterest"/>
        <result column="current_month_invest_repay_count" property="currentMonthInvestRepayCount"/>
        <result column="expected_experience_interest" property="expectedExperienceInterest"/>
        <result column="actual_experience_interest" property="actualExperienceInterest"/>
        <result column="invest_amount" property="investAmount"/>
    </resultMap>

    <select id="findByLoginName" parameterType="map" resultMap="userFundResultMap">
        select
              (select balance from bank_account where login_name = #{loginName} and role_type = #{roleType}) as balance,

              (select ifnull(sum(invest_repay.actual_interest), 0) - ifnull(sum(invest_repay.actual_fee), 0)
              from invest_repay join invest on invest_repay.invest_id= invest.id
              where invest.loan_id != 1 and invest_repay.is_transferred is false and invest.login_name = #{loginName} and invest_repay.status = 'COMPLETE') as actual_total_interest,

              (select ifnull(sum(actual_interest), 0) - ifnull(sum(actual_fee), 0)
              from coupon_repay
              where is_transferred is false and login_name = #{loginName} and status = 'COMPLETE') as actual_coupon_interest,

              (select ifnull(sum(invest_extra_rate.actual_interest), 0) - ifnull(sum(invest_extra_rate.actual_fee), 0)
              from invest_extra_rate where login_name = #{loginName} and is_transfer is false)
               +
              (select ifnull(sum(amount), 0)
              from user_bill
              where business_type='INVEST_CASH_BACK' and login_name = #{loginName}) as actual_total_extra_interest,

              (select ifnull(sum(amount), 0) from invest_referrer_reward
              where referrer_login_name = #{loginName} and status = 'SUCCESS') as refer_reward_amount,

              (select ifnull(sum(user_coupon.actual_interest), 0) - ifnull(sum(user_coupon.actual_fee), 0)
              from user_coupon join coupon on user_coupon.coupon_id = coupon.id
              where user_coupon.login_name = #{loginName} and user_coupon.status = 'SUCCESS' and coupon.coupon_type = 'RED_ENVELOPE') as red_envelope_amount,

              (select ifnull(sum(invest_repay.corpus), 0)
              from invest_repay join invest on invest_repay.invest_id = invest.id
              where invest.login_name = #{loginName} and invest_repay.status = 'REPAYING') as expected_total_corpus,

              (select ifnull(sum(invest_repay.expected_interest), 0) - sum(invest_repay.expected_fee)
              from invest_repay join invest on invest_repay.invest_id = invest.id
              where invest.loan_id != 1 and login_name = #{loginName} and invest_repay.status= 'REPAYING') as expected_total_interest,

              (select ifnull(sum(coupon_repay.expected_interest), 0) - ifnull(sum(coupon_repay.expected_fee), 0)
              from coupon_repay
              where login_name = #{loginName} and status = 'REPAYING') as expected_coupon_interest,

              (select ifnull(sum(expected_interest), 0) - ifnull(sum(expected_fee), 0)
              from invest_extra_rate
              where login_name = #{loginName} and is_transfer is false and actual_repay_date is null) as expected_total_extra_interest,

              (select count(1)
              from invest_repay join invest on invest_repay.invest_id = invest.id
              where invest.login_name = #{loginName}
              and EXISTS (select 1 from loan l where l.id = invest.loan_id and l.product_type != 'EXPERIENCE')
              and invest.transfer_status != 'SUCCESS'
              and((invest_repay.status = 'REPAYING' and date_format(invest_repay.repay_date, '%Y-%m-%d') between date_format(now(), '%Y-%m-01') and LAST_DAY(now()))
                  or(invest_repay.status = 'COMPLETE' and date_format(invest_repay.actual_repay_date, '%Y-%m-%d') between date_format(now(), '%Y-%m-01') and LAST_DAY(now())))) as current_month_invest_repay_count,

              (select ifnull(sum(amount), 0)
              from user_bill
              where business_type='EXPERIENCE_INTEREST' and login_name = #{loginName}) as actual_experience_interest,

              (select ifnull(sum(invest_repay.expected_interest), 0)
              from invest_repay join invest on invest_repay.invest_id= invest.id
              where invest.loan_id = 1 and invest_repay.is_transferred is false and invest.login_name = #{loginName} and invest_repay.status = 'REPAYING') as expected_experience_interest,

             (select ifnull(sum(amount), 0) from invest where invest.login_name = #{loginName} and invest.status = 'SUCCESS' and loan_id !=1 and transfer_invest_id is null) as invest_amount
        from dual;
    </select>

    <select id="findUmpByLoginName" parameterType="map" resultMap="userFundResultMap">
        select
        (select balance from account where login_name = #{loginName}) as balance,

        (select ifnull(sum(invest_repay.actual_interest), 0) - ifnull(sum(invest_repay.actual_fee), 0)
        from invest_repay join invest on invest_repay.invest_id= invest.id
        where invest.loan_id != 1 and invest_repay.is_transferred is false and invest.login_name = #{loginName} and invest_repay.status = 'COMPLETE') as actual_total_interest,

        (select ifnull(sum(actual_interest), 0) - ifnull(sum(actual_fee), 0)
        from coupon_repay
        where is_transferred is false and login_name = #{loginName} and status = 'COMPLETE') as actual_coupon_interest,

        (select ifnull(sum(invest_extra_rate.actual_interest), 0) - ifnull(sum(invest_extra_rate.actual_fee), 0)
        from invest_extra_rate where login_name = #{loginName} and is_transfer is false)
        +
        (select ifnull(sum(amount), 0)
        from user_bill
        where business_type='INVEST_CASH_BACK' and login_name = #{loginName}) as actual_total_extra_interest,

        (select ifnull(sum(amount), 0) from invest_referrer_reward
        where referrer_login_name = #{loginName} and status = 'SUCCESS') as refer_reward_amount,

        (select ifnull(sum(user_coupon.actual_interest), 0) - ifnull(sum(user_coupon.actual_fee), 0)
        from user_coupon join coupon on user_coupon.coupon_id = coupon.id
        where user_coupon.login_name = #{loginName} and user_coupon.status = 'SUCCESS' and coupon.coupon_type = 'RED_ENVELOPE') as red_envelope_amount,

        (select ifnull(sum(invest_repay.corpus), 0)
        from invest_repay join invest on invest_repay.invest_id = invest.id
        where invest.login_name = #{loginName} and invest_repay.status = 'REPAYING') as expected_total_corpus,

        (select ifnull(sum(invest_repay.expected_interest), 0) - sum(invest_repay.expected_fee)
        from invest_repay join invest on invest_repay.invest_id = invest.id
        where invest.loan_id != 1 and login_name = #{loginName} and invest_repay.status= 'REPAYING') as expected_total_interest,

        (select ifnull(sum(coupon_repay.expected_interest), 0) - ifnull(sum(coupon_repay.expected_fee), 0)
        from coupon_repay
        where login_name = #{loginName} and status = 'REPAYING') as expected_coupon_interest,

        (select ifnull(sum(expected_interest), 0) - ifnull(sum(expected_fee), 0)
        from invest_extra_rate
        where login_name = #{loginName} and is_transfer is false and actual_repay_date is null) as expected_total_extra_interest,

        (select count(1)
        from invest_repay join invest on invest_repay.invest_id = invest.id
        where invest.login_name = #{loginName}
        and EXISTS (select 1 from loan l where l.id = invest.loan_id and l.product_type != 'EXPERIENCE')
        and invest.transfer_status != 'SUCCESS'
        and((invest_repay.status = 'REPAYING' and date_format(invest_repay.repay_date, '%Y-%m-%d') between date_format(now(), '%Y-%m-01') and LAST_DAY(now()))
        or(invest_repay.status = 'COMPLETE' and date_format(invest_repay.actual_repay_date, '%Y-%m-%d') between date_format(now(), '%Y-%m-01') and LAST_DAY(now())))) as current_month_invest_repay_count,

        (select ifnull(sum(amount), 0)
        from user_bill
        where business_type='EXPERIENCE_INTEREST' and login_name = #{loginName}) as actual_experience_interest,

        (select ifnull(sum(invest_repay.expected_interest), 0)
        from invest_repay join invest on invest_repay.invest_id= invest.id
        where invest.loan_id = 1 and invest_repay.is_transferred is false and invest.login_name = #{loginName} and invest_repay.status = 'REPAYING') as expected_experience_interest,

        (select ifnull(sum(amount), 0) from invest where invest.login_name = #{loginName} and invest.status = 'SUCCESS' and loan_id !=1 and transfer_invest_id is null) as invest_amount
        from dual;
    </select>

</mapper>