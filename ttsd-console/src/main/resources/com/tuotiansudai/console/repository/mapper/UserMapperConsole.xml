<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tuotiansudai.console.repository.mapper.UserMapperConsole">

    <cache-ref namespace="com.tuotiansudai.repository.mapper.UserMapper"/>

    <resultMap id="userResultMap" type="UserView">
        <id column="id" property="id"/>
        <result column="login_name" property="loginName"/>
        <result column="password" property="password"/>
        <result column="email" property="email"/>
        <result column="mobile" property="mobile"/>
        <result column="register_time" property="registerTime"/>
        <result column="last_login_time" property="lastLoginTime"/>
        <result column="last_modified_time" property="lastModifiedTime"/>
        <result column="last_modified_user" property="lastModifiedUser"/>
        <result column="avatar" property="avatar"/>
        <result column="referrer_mobile" property="referrerMobile"/>
        <result column="status" property="status"/>
        <result column="salt" property="salt"/>
        <result column="channel" property="channel"/>
        <result column="source" property="source"/>
        <result column="province" property="province"/>
        <result column="city" property="city"/>
        <result column="auto_invest_status" property="autoInvestStatus"/>
        <result column="last_bill_time" property="lastBillTime"/>
        <association property="account" javaType="com.tuotiansudai.repository.model.AccountModel">
            <id column="id" property="id"/>
            <result column="login_name" property="loginName"/>
            <result column="user_name" property="userName"/>
            <result column="identity_number" property="identityNumber"/>
            <result column="pay_user_id" property="payUserId"/>
            <result column="pay_account_id" property="payAccountId"/>
            <result column="balance" property="balance"/>
            <result column="freeze" property="freeze"/>
            <result column="register_time" property="registerTime"/>
            <result column="auto_invest" property="autoInvest"/>
        </association>
    </resultMap>

    <select id="findAllUser" parameterType="map" resultMap="userResultMap">
        select
        u.*,
        a.*,
        referrer_u.mobile as referrer_mobile,
        IF(au.login_name is null, "0", "1") as auto_invest_status
        from
        <choose>
            <when test="roleStage == null ">
                user u
            </when>
            <when test="roleStage.name() == 'NORMAL_USER' ">
                (SELECT
                j.*
                FROM
                user j
                WHERE
                NOT EXISTS( SELECT
                1
                FROM
                (SELECT
                ff.login_name
                FROM
                (SELECT
                k.login_name
                FROM
                user_role o
                RIGHT JOIN referrer_relation k ON o.login_name = k.referrer_login_name
                AND k.level = 1
                WHERE
                o.role = 'STAFF' UNION SELECT
                h.login_name
                FROM
                user_role h
                WHERE
                h.role IN ('STAFF' , 'AGENT')) ff) gg
                WHERE
                gg.login_name = j.login_name) and EXISTS(select 1 from invest i where j.login_name = i.login_name) ) u

            </when>
            <when test="roleStage.name() == 'RECOMMENDATION' ">
                (select j.* from user j JOIN (select k.login_name from user_role o RIGHT join referrer_relation k on
                o.login_name = k.referrer_login_name and k.level = 1 where o.role = 'STAFF') gg on j.login_name = gg.login_name)
                u
            </when>
            <otherwise>
                user u join user_role r on u.login_name = r.login_name
            </otherwise>
        </choose>
        left join account a on u.login_name = a.login_name
        left join auto_invest_plan au on u.login_name = au.login_name and enabled=1
        left join user referrer_u on referrer_u.login_name = u.referrer
        <where>
            <if test="roleStage !=null and roleStage.name() != 'RECOMMENDATION' and  roleStage.name()!='NORMAL_USER' ">
                and r.role = #{roleStage}
            </if>
            <if test="email !=null and email !='' ">
                and u.email like '${email}%'
            </if>
            <if test="mobile !=null and mobile !='' ">
                and u.mobile like '${mobile}%'
            </if>
            <if test="loginName !=null and loginName != '' ">
                and u.login_name = #{loginName}
            </if>
            <if test="beginTime !=null">
                and u.register_time >= #{beginTime}
            </if>
            <if test="endTime !=null ">
                and u.register_time &lt;= #{endTime}
            </if>
            <if test="referrerMobile !=null and referrerMobile != '' ">
                and referrer_u.mobile = #{referrerMobile}
            </if>
            <if test="channel !=null and channel != '' ">
                and u.channel = #{channel}
            </if>
            <if test="source !=null">
                and u.source = #{source}
            </if>

        </where>
        order by u.register_time desc
        limit #{index}, #{pageSize}
    </select>

    <select id="findAllUserCount" parameterType="map" resultType="int">
        select count(1) from
        <choose>
            <when test="roleStage == null">
                user u
            </when>
            <when test="roleStage.name() == 'NORMAL_USER' ">
                (SELECT
                j.*
                FROM
                user j
                WHERE
                NOT EXISTS( SELECT
                1
                FROM
                (SELECT
                ff.login_name
                FROM
                (SELECT
                k.login_name
                FROM
                user_role o
                RIGHT JOIN referrer_relation k ON o.login_name = k.referrer_login_name
                AND k.level = 1
                WHERE
                o.role = 'STAFF' UNION SELECT
                h.login_name
                FROM
                user_role h
                WHERE
                h.role IN ('STAFF' , 'AGENT')) ff) gg
                WHERE
                gg.login_name = j.login_name) and EXISTS(select 1 from invest i where j.login_name = i.login_name) ) u

            </when>
            <when test="roleStage.name() == 'RECOMMENDATION' ">
                (select j.* from user j JOIN (select k.login_name from user_role o RIGHT join referrer_relation k on
                o.login_name = k.referrer_login_name and k.level = 1 where o.role = 'STAFF') gg on j.login_name = gg.login_name)
                u
            </when>
            <otherwise>
                user u join user_role r on u.login_name = r.login_name
            </otherwise>
        </choose>
        left join user referrer_u on referrer_u.login_name = u.referrer
        <where>
            <if test="roleStage !=null and roleStage.name() != 'RECOMMENDATION' and  roleStage.name()!='NORMAL_USER' ">
                and r.role = #{roleStage}
            </if>
            <if test="email !=null and email !='' ">
                and u.email like '${email}%'
            </if>
            <if test="mobile !=null and mobile !='' ">
                and u.mobile like '${mobile}%'
            </if>
            <if test="loginName !=null and loginName != '' ">
                and u.login_name = #{loginName}
            </if>
            <if test="beginTime !=null">
                and u.register_time >= #{beginTime}
            </if>
            <if test="endTime !=null ">
                and u.register_time &lt;= #{endTime}
            </if>
            <if test="referrerMobile !=null and referrerMobile != '' ">
                and referrer_u.mobile = #{referrerMobile}
            </if>
            <if test="channel !=null and channel != '' ">
                and u.channel = #{channel}
            </if>
            <if test="source !=null">
                and u.source = #{source}
            </if>
        </where>
    </select>



</mapper>