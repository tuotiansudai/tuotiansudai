<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tuotiansudai.console.repository.mapper.UserMapperConsole">

    <resultMap id="userViewResultMap" type="UserView">
        <id column="id" property="id"/>
        <result column="login_name" property="loginName"/>
        <result column="mobile" property="mobile"/>
        <result column="email" property="email"/>
        <result column="user_name" property="userName"/>
        <result column="identity_number" property="identityNumber"/>
        <result column="is_staff" property="isStaff"/>
        <result column="is_bind_bank_card" property="isBindBankCard"/>
        <result column="status" property="status"/>
        <result column="channel" property="channel"/>
        <result column="source" property="source"/>
        <result column="province" property="province"/>
        <result column="city" property="city"/>
        <result column="auto_invest_status" property="autoInvestStatus"/>
        <result column="referrer_mobile" property="referrerMobile"/>
        <result column="register_time" property="registerTime"/>
        <result column="is_referrer_staff" property="isReferrerStaff"/>
        <result column="last_bill_time" property="lastBillTime"/>
        <result column="fast_pay" property="fastPay"/>
        <result column="ump_user_name" property="umpUserName"/>
        <result column="ump_identity_number" property="umpIdentityNumber"/>
        <result column="staff_mobile" property="staffMobile"/>
    </resultMap>

    <resultMap id="userMicroModelView" type="com.tuotiansudai.console.repository.model.UserMicroModelView">
        <id column="id" property="id"/>
        <result column="user_name" property="userName"/>
        <result column="mobile" property="mobile"/>
        <result column="channel" property="channel"/>
        <result column="register_time" property="registerTime"/>
        <result column="no_invest_period" property="noInvestPeriod"/>
        <result column="invested" property="invested"/>
        <result column="total_invest_amount" property="totalInvestAmount"/>
        <result column="total_withdraw_amount" property="totalWithdrawAmount"/>
        <result column="user_balance" property="userBalance"/>
        <result column="invest_count" property="investCount"/>
        <result column="loan_count" property="loanCount"/>
        <result column="transform_period" property="transformPeriod"/>
        <result column="invest_1st_2nd_timing" property="invest1st2ndTiming"/>
        <result column="invest_1st_3rd_timing" property="invest1st3rdTiming"/>
        <result column="last_invest_time" property="lastInvestTime"/>
        <result column="total_repaying_amount" property="totalRepayingAmount"/>
        <result column="last_login_time" property="lastLoginTime"/>
        <result column="last_repay_time" property="lastRepayTime"/>
        <result column="last_withdraw_time" property="lastWithdrawTime"/>
        <result column="last_login_source" property="lastLoginSource"/>
    </resultMap>

    <resultMap id="remainUserViewResultMap" type="com.tuotiansudai.console.repository.model.RemainUserView">
        <result column="login_name" property="loginName"/>
        <result column="mobile" property="mobile"/>
        <result column="user_name" property="userName"/>
        <result column="register_time" property="registerTime"/>
        <result column="use_experience_coupon" property="useExperienceCoupon"/>
        <result column="experience_time" property="experienceTime"/>
        <result column="invest_count" property="investCount"/>
        <result column="invest_sum" property="investSum"/>
        <result column="first_invest_time" property="firstInvestTime"/>
        <result column="first_invest_amount" property="firstInvestAmount"/>
        <result column="second_invest_time" property="secondInvestTime"/>
        <result column="second_invest_amount" property="secondInvestAmount"/>
    </resultMap>

    <select id="findAllUser" parameterType="map" resultMap="userViewResultMap">
        SELECT
        u.ump_user_name as ump_user_name,
        u.ump_identity_number as ump_identity_number,
        u.id as id,
        u.login_name as login_name,
        u.mobile as mobile,
        u.email as email,
        u.source as source,
        u.channel as channel,
        u.province as province,
        u.city as city,
        u.register_time as register_time,
        u.status as status,
        u.user_name as user_name,
        u.identity_number as identity_number,
        (select mobile from user referrer where referrer.login_name = u.referrer) AS referrer_mobile,
        IF(exists (select 1 from auto_invest_plan au where u.login_name = au.login_name and enabled is TRUE), "0", "1")
        as auto_invest_status,
        IF(exists (select 1 from user_role referrer_role where referrer_role.login_name = u.referrer and
        referrer_role.role in ('SD_STAFF', 'ZC_STAFF')), TRUE, FALSE) as is_referrer_staff,
        IF(exists (select 1 from user_role where user_role.login_name = u.login_name and user_role.role in ('SD_STAFF',
        'ZC_STAFF')), TRUE, FALSE) as is_staff,
        IF(exists (select 1 from bank_card where bank_card.login_name = u.login_name and bank_card.status = 'PASSED'),
        TRUE, FALSE) as is_bind_bank_card,
        IF(exists (select 1 from bank_card where bank_card.login_name = u.login_name and bank_card.status = 'PASSED' and
        bank_card.is_fast_pay_on = 1), TRUE, FALSE) as fast_pay,
        referrer_relation.staff_mobile as staff_mobile
        from
        <choose>
            <when test="roleStage == null ">
                user u
            </when>
            <when test="roleStage.name() == 'SD_STAFF_RECOMMENDATION' ">
                (select j.* from user j JOIN (select k.login_name from user_role o RIGHT join referrer_relation k on
                o.login_name = k.referrer_login_name and k.level = 1 where o.role = 'SD_STAFF') gg on j.login_name =
                gg.login_name)
                u
            </when>
            <when test="roleStage.name() == 'ZC_STAFF_RECOMMENDATION' ">
                (select j.* from user j JOIN (select k.login_name from user_role o RIGHT join referrer_relation k on
                o.login_name = k.referrer_login_name and k.level = 1 where o.role = 'ZC_STAFF') gg on j.login_name =
                gg.login_name)
                u
            </when>
            <otherwise>
                user u join user_role r on u.login_name = r.login_name
            </otherwise>
        </choose>

        left join account a on u.login_name = a.login_name

        left join
            (select referrer_login_name, login_name, level, (select user.mobile from user where user.login_name = temp1.referrer_login_name) as staff_mobile from referrer_relation temp1
                where level = (select max(level) from referrer_relation temp2 where temp1.login_name = temp2.login_name)
                and if (exists (select 1 from user_role where user_role.login_name = temp1.referrer_login_name and user_role.role in ('SD_STAFF', 'ZC_STAFF')), true, false)) referrer_relation
            on u.login_name = referrer_relation.login_name

        <where>
            <if test="roleStage != null and roleStage.name() != 'SD_STAFF_RECOMMENDATION' and roleStage.name() != 'ZC_STAFF_RECOMMENDATION'">
                and r.role = #{roleStage}
            </if>
            <if test="email !=null and email !='' ">
                and u.email like '${email}%'
            </if>
            <if test="mobile !=null and mobile !='' ">
                and u.mobile like '${mobile}%'
            </if>
            <if test="loginName !=null and loginName != '' ">
                and u.login_name = #{loginName}
            </if>
            <if test="beginTime !=null">
                and u.register_time >= #{beginTime}
            </if>
            <if test="endTime !=null ">
                and u.register_time &lt;= #{endTime}
            </if>
            <if test="referrerMobile !=null and referrerMobile != '' ">
                and exists (select 1 from user referrer where u.referrer = referrer.login_name and referrer.mobile =
                #{referrerMobile})
            </if>
            <if test="channel !=null and channel != '' ">
                and u.channel = #{channel}
            </if>
            <if test="source !=null">
                and u.source = #{source}
            </if>
            <if test="userOperation != null">
                <if test="userOperation.name() == 'BIND_CARD'">
                    and IF(exists (select 1 from bank_card where bank_card.login_name = u.login_name and
                    bank_card.status = 'PASSED'), TRUE, FALSE)
                </if>
                <if test="userOperation.name() == 'FAST_PAY'">
                    and IF(exists (select 1 from bank_card where bank_card.login_name = u.login_name and
                    bank_card.status = 'PASSED' and bank_card.is_fast_pay_on = 1), TRUE, FALSE)
                </if>
                <if test="userOperation.name() == 'RECHARGED'">
                    and IF(exists (select 1 from recharge where recharge.login_name = u.login_name and recharge.status =
                    'SUCCESS'), TRUE, FALSE)
                </if>
                <if test="userOperation.name() == 'INVESTED'">
                    and IF(exists (select 1 from invest where invest.login_name = u.login_name and invest.status =
                    'SUCCESS'), TRUE, FALSE)
                </if>
                <if test="userOperation.name() == 'MULTIPLE_INVESTED'">
                    and (select count(1) from invest where invest.login_name = u.login_name and invest.status =
                    'SUCCESS') > 1
                </if>
            </if>
            <if test="hasStaff !=null">
                <if test="hasStaff == true">
                    and referrer_relation.referrer_login_name is not null
                </if>
                <if test="hasStaff == false">
                    and referrer_relation.referrer_login_name is null
                </if>
            </if>
            <if test="staffMobile !=null and staffMobile !=''">
                and referrer_relation.staff_mobile like '${staffMobile}%'
            </if>
        </where>
        order by u.register_time desc
        limit #{index}, #{pageSize}
    </select>

    <select id="findAllUserCount" parameterType="map" resultType="int">
        select count(1) from
        <choose>
            <when test="roleStage == null">
                user u
            </when>
            <when test="roleStage.name() == 'SD_STAFF_RECOMMENDATION' ">
                (select j.* from user j JOIN (select k.login_name from user_role o RIGHT join referrer_relation k on
                o.login_name = k.referrer_login_name and k.level = 1 where o.role = 'SD_STAFF') gg on j.login_name =
                gg.login_name)
                u
            </when>
            <when test="roleStage.name() == 'ZC_STAFF_RECOMMENDATION' ">
                (select j.* from user j JOIN (select k.login_name from user_role o RIGHT join referrer_relation k on
                o.login_name = k.referrer_login_name and k.level = 1 where o.role = 'ZC_STAFF') gg on j.login_name =
                gg.login_name)
                u
            </when>
            <otherwise>
                user u join user_role r on u.login_name = r.login_name
            </otherwise>
        </choose>

        left join
            (select referrer_login_name, login_name, level, (select user.mobile from user where user.login_name = temp1.referrer_login_name) as staff_mobile from referrer_relation temp1
                where level = (select max(level) from referrer_relation temp2 where temp1.login_name = temp2.login_name)
                and if (exists (select 1 from user_role where user_role.login_name = temp1.referrer_login_name and user_role.role in ('SD_STAFF', 'ZC_STAFF')), true, false)) referrer_relation
            on u.login_name = referrer_relation.login_name

        <where>
            <if test="roleStage != null and roleStage.name() != 'SD_STAFF_RECOMMENDATION' and roleStage.name() != 'ZC_STAFF_RECOMMENDATION'">
                and r.role = #{roleStage}
            </if>
            <if test="email !=null and email !='' ">
                and u.email like '${email}%'
            </if>
            <if test="mobile !=null and mobile !='' ">
                and u.mobile like '${mobile}%'
            </if>
            <if test="loginName !=null and loginName != '' ">
                and u.login_name = #{loginName}
            </if>
            <if test="beginTime !=null">
                and u.register_time >= #{beginTime}
            </if>
            <if test="endTime !=null ">
                and u.register_time &lt;= #{endTime}
            </if>
            <if test="referrerMobile !=null and referrerMobile != '' ">
                and exists (select 1 from user referrer where u.referrer = referrer.login_name and referrer.mobile =
                #{referrerMobile})
            </if>
            <if test="channel !=null and channel != '' ">
                and u.channel = #{channel}
            </if>
            <if test="source !=null">
                and u.source = #{source}
            </if>
            <if test="userOperation != null">
                <if test="userOperation.name() == 'BIND_CARD'">
                    and IF(exists (select 1 from bank_card where bank_card.login_name = u.login_name and
                    bank_card.status = 'PASSED'), TRUE, FALSE)
                </if>
                <if test="userOperation.name() == 'FAST_PAY'">
                    and IF(exists (select 1 from bank_card where bank_card.login_name = u.login_name and
                    bank_card.status = 'PASSED' and bank_card.is_fast_pay_on = 1), TRUE, FALSE)
                </if>
                <if test="userOperation.name() == 'RECHARGED'">
                    and IF(exists (select 1 from recharge where recharge.login_name = u.login_name and recharge.status =
                    'SUCCESS'), TRUE, FALSE)
                </if>
                <if test="userOperation.name() == 'INVESTED'">
                    and IF(exists (select 1 from invest where invest.login_name = u.login_name and invest.status =
                    'SUCCESS'), TRUE, FALSE)
                </if>
                <if test="userOperation.name() == 'MULTIPLE_INVESTED'">
                    and (select count(1) from invest where invest.login_name = u.login_name and invest.status =
                    'SUCCESS') > 1
                </if>
            </if>
            <if test="hasStaff !=null">
                <if test="hasStaff == true">
                    and referrer_relation.referrer_login_name is not null
                </if>
                <if test="hasStaff == false">
                    and referrer_relation.referrer_login_name is null
                </if>
            </if>
            <if test="staffMobile !=null and staffMobile !=''">
                 and referrer_relation.staff_mobile like '${staffMobile}%'
            </if>
        </where>
    </select>

    <select id="searchAllUsers" parameterType="map" resultMap="userViewResultMap">
        SELECT
        user.id as id,
        user.login_name as login_name,
        user.mobile as mobile,
        user.email as email,
        user.source as source,
        user.channel as channel,
        user.province as province,
        user.city as city,
        user.register_time as register_time,
        user.status as status,
        user.user_name as user_name,
        user.identity_number as identity_number,
        user.user_name as user_name,
        user.identity_number as identity_number,
        (select mobile from user referrer where referrer.login_name = user.referrer) AS referrer_mobile
        FROM user
        <where>
            <if test="identityNumber != null and identityNumber != '' ">
                AND user.`identity_number` = #{identityNumber}
            </if>
            <if test="loginName != null and loginName != '' ">
                AND user.`login_name` = #{loginName}
            </if>
            <if test="referrerMobile != null and referrerMobile != '' ">
                AND EXISTS (select 1 from user referrer where referrer.login_name = user.referrer and referrer.mobile =
                #{referrerMobile})
            </if>
            <if test="mobile != null and mobile != '' ">
                AND user.`mobile` = #{mobile}
            </if>
        </where>
        ORDER BY user.`register_time` DESC
    </select>

    <select id="findUsersAccountBalance" parameterType="map" resultMap="userViewResultMap">
        SELECT
        user.user_name as user_name,
        user.identity_number as identity_number,
        user.id as id,
        user.login_name as login_name,
        user.mobile as mobile,
        user.province as province,
        user.city as city,
        IF(exists (select 1 from user_role where user_role.login_name = user.login_name and user_role.role in
        ('SD_STAFF', 'ZC_STAFF')), TRUE, FALSE) as is_staff,
        user.register_time as register_time,
        user.status as status,
        user.user_name as user_name,
        bank_account.balance as balance,
        (select max(`user_bill`.`created_time`) from `user_bill` where `user_bill`.`login_name` = `user`.`login_name`)
        as last_bill_time
        FROM `user`
        JOIN `bank_account`
        ON `user`.`login_name` = `bank_account`.`login_name`
        <where>
            <if test="role != null">
                AND `bank_account`.`role_type` = #{role}
            </if>
            <if test="mobile != null and mobile != '' ">
                AND `user`.`mobile` = #{mobile}
            </if>
            <if test="balanceMin >= 0">
                AND `bank_account`.`balance` >= #{balanceMin}
            </if>
            <if test="balanceMax >= 0">
                AND `bank_account`.`balance` &lt;= #{balanceMax}
            </if>
            ORDER BY `bank_account`.`balance` DESC
            <if test="startLimit != null and endLimit != null">
                limit #{startLimit}, #{endLimit}
            </if>
        </where>
    </select>

    <select id="findUsersAccountBalanceUMP" parameterType="map" resultMap="userViewResultMap">
        SELECT
        user.user_name as user_name,
        user.identity_number as identity_number,
        user.id as id,
        user.login_name as login_name,
        user.mobile as mobile,
        user.province as province,
        user.city as city,
        IF(exists (select 1 from user_role where user_role.login_name = user.login_name and user_role.role in
        ('SD_STAFF', 'ZC_STAFF')), TRUE, FALSE) as is_staff,
        user.register_time as register_time,
        user.status as status,
        user.user_name as user_name,
        account.balance as balance,
        (select max(`user_bill`.`created_time`) from `user_bill` where `user_bill`.`login_name` = `user`.`login_name`)
        as last_bill_time
        FROM `user`
        JOIN `account`
        ON `user`.`login_name` = `account`.`login_name`
        WHERE NOT EXISTS (SELECT 1 FROM `user_role` WHERE `user`.`login_name` = `user_role`.`login_name` AND
        `user_role`.`role` = 'UMP_LOANER')
        <if test="mobile != null and mobile != '' ">
            AND `user`.`mobile` = #{mobile}
        </if>
        <if test="balanceMin >= 0">
            AND `account`.`balance` >= #{balanceMin}
        </if>
        <if test="balanceMax >= 0">
            AND `account`.`balance` &lt;= #{balanceMax}
        </if>
        ORDER BY `account`.`balance` DESC
        <if test="startLimit != null and endLimit != null">
            limit #{startLimit}, #{endLimit}
        </if>

    </select>

    <select id="findUsersAccountBalanceSum" parameterType="map" resultType="long">
        SELECT IFNULL(SUM(`bank_account`.`balance`), 0)
        FROM `user`
        JOIN `bank_account`
        ON `user`.`login_name` = `bank_account`.`login_name`
        <where>
            <if test="role != null">
                AND `bank_account`.`role_type` = #{role}
            </if>
            <if test="mobile != null and mobile != '' ">
                AND `user`.`mobile` = #{mobile}
            </if>
            <if test="balanceMin >= 0">
                AND `bank_account`.`balance` >= #{balanceMin}
            </if>
            <if test="balanceMax >= 0">
                AND `bank_account`.`balance` &lt;= #{balanceMax}
            </if>
        </where>
    </select>

    <select id="findUsersAccountBalanceSumUMP" parameterType="map" resultType="long">
        SELECT IFNULL(SUM(`account`.`balance`), 0)
        FROM `user`
        JOIN `account`
        ON `user`.`login_name` = `account`.`login_name`
        WHERE NOT EXISTS (SELECT 1 FROM `user_role` WHERE `user`.`login_name` = `user_role`.`login_name` AND
        `user_role`.`role` = 'UMP_LOANER')
        <if test="mobile != null and mobile != '' ">
            AND `user`.`mobile` = #{mobile}
        </if>
        <if test="balanceMin >= 0">
            AND `account`.`balance` >= #{balanceMin}
        </if>
        <if test="balanceMax >= 0">
            AND `account`.`balance` &lt;= #{balanceMax}
        </if>
    </select>

    <select id="findUsersAccountBalanceCount" parameterType="map" resultType="long">
        SELECT IFNULL(count(1), 0)
        FROM `user`
        JOIN `bank_account`
        ON `user`.`login_name` = `bank_account`.`login_name`
        <where>
            <if test="role != null">
                AND `bank_account`.`role_type` = #{role}
            </if>
            <if test="mobile != null and mobile != '' ">
                AND `user`.`mobile` = #{mobile}
            </if>
            <if test="balanceMin >= 0">
                AND `bank_account`.`balance` >= #{balanceMin}
            </if>
            <if test="balanceMax >= 0">
                AND `bank_account`.`balance` &lt;= #{balanceMax}
            </if>
        </where>
    </select>
    <select id="findUsersAccountBalanceCountUMP" parameterType="map" resultType="long">
        SELECT IFNULL(count(1), 0)
        FROM `user`
        JOIN `account`
        ON `user`.`login_name` = `account`.`login_name`
        WHERE NOT EXISTS (SELECT 1 FROM `user_role` WHERE `user`.`login_name` = `user_role`.`login_name` AND
        `user_role`.`role` = 'UMP_LOANER')
        <if test="mobile != null and mobile != '' ">
            AND `user`.`mobile` = #{mobile}
        </if>
        <if test="balanceMin >= 0">
            AND `account`.`balance` >= #{balanceMin}
        </if>
        <if test="balanceMax >= 0">
            AND `account`.`balance` &lt;= #{balanceMax}
        </if>
    </select>

    <select id="findUsersCountByChannel" parameterType="string" resultType="long">
        select ifnull(count(*),0) from user where channel = #{channel}
    </select>

    <select id="findStaffByLikeLoginName" parameterType="string" resultType="string">
        select login_name
        from user
        where user.login_name like CONCAT(CONCAT('%', #{loginName}), '%')
        and exists(select 1 from user_role where user_role.login_name = user.login_name and user_role.role in ('SD_STAFF', 'ZC_STAFF'))
    </select>

    <select id="findMobileLike" parameterType="string" resultType="string">
        select mobile from user where mobile like CONCAT(CONCAT('%', #{mobile}), '%')
    </select>

    <select id="findLoginNameLike" parameterType="string" resultType="string">
        select login_name from user where login_name like CONCAT(CONCAT('%', #{loginName}), '%')
    </select>

    <select id="findAllLoanerLikeLoginName" parameterType="string" resultType="string">
        select t.login_name from user t JOIN user_role r ON t.`login_name` = r.`login_name` AND r.`role` = 'LOANER' where t.login_name like CONCAT(CONCAT('%', #{loginName}), '%')
    </select>

    <select id="findAccountLikeLoginName" parameterType="string" resultType="string">
        select login_name
        from user
        where login_name like CONCAT(CONCAT('%', #{loginName}), '%')
        and exists (select 1 from bank_account where bank_account.login_name = user.login_name and bank_account.role_type = 'INVESTOR')
    </select>

    <select id="findUserMicroModelCount" parameterType="map" resultType="int">
        select
        count(1)
        from user u
        <where>
            <if test="mobile != null and mobile != '' ">
                AND u.mobile = #{mobile}
            </if>
            <if test="role != null">
                AND exists (select 1 from user_role where u.login_name = user_role.login_name and user_role.role =
                #{role})
            </if>
            <if test="registerTimeStart != null">
                AND u.register_time >= #{registerTimeStart}
            </if>
            <if test="registerTimeEnd != null">
                AND u.register_time &lt; #{registerTimeEnd}
            </if>
            <if test="hasCertify != null and hasCertify == 'true'">
                AND u.identity_number is not null
            </if>
            <if test="hasCertify != null and hasCertify == 'false'">
                AND u.identity_number is null
            </if>
            <if test="invested != null and invested == 'true' ">
                AND EXISTS (select 1 from invest i where i.login_name=u.login_name and i.status='SUCCESS' and loan_id !=
                1 order by i.created_time asc limit 1)
            </if>
            <if test="invested != null and invested == 'false' ">
                AND NOT EXISTS (select 1 from invest i where i.login_name=u.login_name and i.status='SUCCESS' and
                loan_id != 1 order by i.created_time asc limit 1)
            </if>
            <if test="totalInvestAmountStart != null and totalInvestAmountStart != '' ">
                AND (select sum(amount) from invest i where i.login_name=u.login_name and i.status='SUCCESS' and
                i.loan_id != 1) >= #{totalInvestAmountStart}
            </if>
            <if test="totalInvestAmountEnd != null and totalInvestAmountEnd != '' ">
                AND (select sum(amount) from invest i where i.login_name=u.login_name and i.status='SUCCESS' and
                i.loan_id != 1) &lt;= #{totalInvestAmountEnd}
            </if>
            <if test="totalWithdrawAmountStart != null and totalWithdrawAmountStart != '' ">
                AND (select sum(amount) from withdraw w where w.login_name=u.login_name and w.status='SUCCESS') >=
                #{totalWithdrawAmountStart}
            </if>
            <if test="totalWithdrawAmountEnd != null and totalWithdrawAmountEnd != '' ">
                AND (select sum(amount) from withdraw w where w.login_name=u.login_name and w.status='SUCCESS') &lt;=
                #{totalWithdrawAmountEnd}
            </if>
            <if test="userBalanceStart != null and userBalanceStart != '' ">
                AND (select balance from bank_account a where a.login_name=u.login_name and a.role_type = 'INVESTOR') >=
                #{userBalanceStart}
            </if>
            <if test="userBalanceEnd != null and userBalanceEnd != '' ">
                AND (select balance from bank_account a where a.login_name=u.login_name and a.role_type = 'INVESTOR')
                &lt;= #{userBalanceEnd}
            </if>
            <if test="investCountStart != null and investCountStart >= 0 ">
                AND (select count(1) from invest i where i.login_name=u.login_name and i.status='SUCCESS' and i.loan_id
                != 1) >= #{investCountStart}
            </if>
            <if test="investCountEnd != null and investCountEnd >= 0 ">
                AND (select count(1) from invest i where i.login_name=u.login_name and i.status='SUCCESS' and i.loan_id
                != 1) &lt;= #{investCountEnd}
            </if>
            <if test="loanCountStart != null and loanCountStart >= 0 ">
                AND (select count(distinct l.id) from loan l, invest i where i.login_name=u.login_name and
                i.status='SUCCESS' and i.loan_id = l.id and l.id != 1) >= #{loanCountStart}
            </if>
            <if test="loanCountEnd != null and loanCountEnd >= 0 ">
                AND (select count(distinct l.id) from loan l, invest i where i.login_name=u.login_name and
                i.status='SUCCESS' and i.loan_id = l.id and l.id != 1) &lt;= #{loanCountEnd}
            </if>
            <if test="transformPeriodStart != null and transformPeriodStart >= 0 ">
                AND DATEDIFF((select created_time from invest i where i.login_name=u.login_name and i.status='SUCCESS'
                and i.loan_id != 1 order by i.created_time asc limit 1),
                u.register_time) >= #{transformPeriodStart}
            </if>
            <if test="transformPeriodEnd != null and transformPeriodEnd >= 0 ">
                AND DATEDIFF((select created_time from invest i where i.login_name=u.login_name and i.status='SUCCESS'
                and i.loan_id != 1 order by i.created_time asc limit 1),
                u.register_time) &lt;= #{transformPeriodEnd}
            </if>
            <if test="invest1st2ndTimingStart != null and invest1st2ndTimingStart >= 0 ">
                AND DATEDIFF((select created_time from invest i where i.login_name=u.login_name and i.status='SUCCESS'
                and i.loan_id != 1 order by i.created_time asc limit 1,1),
                (select created_time from invest i where i.login_name=u.login_name and i.status='SUCCESS' and i.loan_id
                != 1 order by i.created_time asc limit 1)) >= #{invest1st2ndTimingStart}
            </if>
            <if test="invest1st2ndTimingEnd != null and invest1st2ndTimingEnd >= 0 ">
                AND DATEDIFF((select created_time from invest i where i.login_name=u.login_name and i.status='SUCCESS'
                and i.loan_id != 1 order by i.created_time asc limit 1,1),
                (select created_time from invest i where i.login_name=u.login_name and i.status='SUCCESS' and i.loan_id
                != 1 order by i.created_time asc limit 1)) &lt;= #{invest1st2ndTimingEnd}
            </if>
            <if test="invest1st3ndTimingStart != null and invest1st3ndTimingStart >= 0 ">
                AND DATEDIFF((select created_time from invest i where i.login_name=u.login_name and i.status='SUCCESS'
                and i.loan_id != 1 order by i.created_time asc limit 2,1),
                (select created_time from invest i where i.login_name=u.login_name and i.status='SUCCESS' and i.loan_id
                != 1 order by i.created_time asc limit 1)) >= #{invest1st3ndTimingStart}
            </if>
            <if test="invest1st3ndTimingEnd != null and invest1st3ndTimingEnd >= 0 ">
                AND DATEDIFF((select created_time from invest i where i.login_name=u.login_name and i.status='SUCCESS'
                and i.loan_id != 1 order by i.created_time asc limit 2,1),
                (select created_time from invest i where i.login_name=u.login_name and i.status='SUCCESS' and i.loan_id
                != 1 order by i.created_time asc limit 1)) &lt;= #{invest1st3ndTimingEnd}
            </if>
            <if test="lastInvestTimeStart != null">
                AND (select created_time from invest i where i.login_name=u.login_name and i.status='SUCCESS' and
                i.loan_id != 1 order by i.created_time desc limit 1) > #{lastInvestTimeStart}
            </if>
            <if test="lastInvestTimeEnd != null">
                AND (select created_time from invest i where i.login_name=u.login_name and i.status='SUCCESS' and
                i.loan_id != 1 order by i.created_time desc limit 1) &lt; #{lastInvestTimeEnd}
            </if>
            <if test="lastRepayTimeStart != null">
                AND (select max(ir.repay_date) from invest_repay ir join invest i on i.id=ir.invest_id where
                i.login_name=u.login_name) > #{lastRepayTimeStart}
            </if>
            <if test="lastRepayTimeEnd != null">
                AND (select max(ir.repay_date) from invest_repay ir join invest i on i.id=ir.invest_id where
                i.login_name=u.login_name) &lt; #{lastRepayTimeEnd}
            </if>
            <if test="lastWithdrawTimeStart != null">
                AND (select max(created_time) from withdraw where login_name=u.login_name and status='SUCCESS') >
                #{lastWithdrawTimeStart}
            </if>
            <if test="lastWithdrawTimeEnd != null">
                AND (select max(created_time) from withdraw where login_name=u.login_name and status='SUCCESS') &lt;
                #{lastWithdrawTimeEnd}
            </if>
            <if test="repayingAmountStart != null and repayingAmountStart >= 0 ">
                AND (IFNULL((select sum(ir.corpus+ir.expected_interest+ir.default_interest-ir.expected_fee) from
                invest_repay ir, invest i where i.login_name=u.login_name and i.id=ir.invest_id and ir.status='REPAYING'
                and i.status='SUCCESS'),0) +
                IFNULL((select sum(cr.expected_interest-cr.expected_fee) from coupon_repay cr, invest i where
                i.login_name=u.login_name and i.id=cr.invest_id and cr.status='REPAYING' and i.status='SUCCESS'),0) +
                IFNULL((select sum(ier.expected_interest-ier.expected_fee) from invest_extra_rate ier, invest i where
                i.login_name=u.login_name and i.id=ier.invest_id and ier.status='REPAYING' and i.status='SUCCESS'),0))
                >= #{repayingAmountStart}
            </if>
            <if test="repayingAmountEnd != null and repayingAmountEnd >= 0 ">
                AND (IFNULL((select sum(ir.corpus+ir.expected_interest+ir.default_interest-ir.expected_fee) from
                invest_repay ir, invest i where i.login_name=u.login_name and i.id=ir.invest_id and ir.status='REPAYING'
                and i.status='SUCCESS'),0) +
                IFNULL((select sum(cr.expected_interest-cr.expected_fee) from coupon_repay cr, invest i where
                i.login_name=u.login_name and i.id=cr.invest_id and cr.status='REPAYING' and i.status='SUCCESS'),0) +
                IFNULL((select sum(ier.expected_interest-ier.expected_fee) from invest_extra_rate ier, invest i where
                i.login_name=u.login_name and i.id=ier.invest_id and ier.status='REPAYING' and i.status='SUCCESS'),0))
                &lt;= #{repayingAmountEnd}
            </if>
            <if test="lastLoginTimeStart != null">
                AND u.last_login_time >= #{lastLoginTimeStart}
            </if>
            <if test="lastLoginTimeEnd != null">
                AND u.last_login_time &lt; #{lastLoginTimeEnd}
            </if>
            <if test="lastLoginSource != null">
                AND u.last_login_source = #{lastLoginSource}
            </if>
        </where>
    </select>

    <select id="queryUserMicroModel" parameterType="map" resultMap="userMicroModelView">
        select
        u.id,
        u.user_name,
        u.mobile,
        u.channel,
        u.register_time,
        DATEDIFF(IFNULL((select created_time from invest i where i.login_name=u.login_name and i.status='SUCCESS' and
        i.loan_id != 1 order by i.created_time asc limit 1),now()),
        u.register_time) as no_invest_period,
        EXISTS (select 1 from invest i where i.login_name=u.login_name and i.status='SUCCESS' and loan_id != 1 order by
        i.created_time asc limit 1) as invested,
        (select sum(amount) from invest i where i.login_name=u.login_name and i.status='SUCCESS' and i.loan_id != 1) as
        total_invest_amount,
        (select sum(amount) from withdraw w where w.login_name=u.login_name and w.status='SUCCESS') as
        total_withdraw_amount,
        (select balance from bank_account a where a.login_name=u.login_name and a.role_type = 'INVESTOR') as
        user_balance,
        (select count(1) from invest i where i.login_name=u.login_name and i.status='SUCCESS' and i.loan_id != 1) as
        invest_count,
        (select count(distinct l.id) from loan l, invest i where i.login_name=u.login_name and i.status='SUCCESS' and
        i.loan_id = l.id and l.id != 1) as loan_count,
        DATEDIFF((select created_time from invest i where i.login_name=u.login_name and i.status='SUCCESS' and i.loan_id
        != 1 order by i.created_time asc limit 1),
        u.register_time) as transform_period,
        DATEDIFF((select created_time from invest i where i.login_name=u.login_name and i.status='SUCCESS' and i.loan_id
        != 1 order by i.created_time asc limit 1,1),
        (select created_time from invest i where i.login_name=u.login_name and i.status='SUCCESS' and i.loan_id != 1
        order by i.created_time asc limit 1)) as invest_1st_2nd_timing,
        DATEDIFF((select created_time from invest i where i.login_name=u.login_name and i.status='SUCCESS' and i.loan_id
        != 1 order by i.created_time asc limit 2,1),
        (select created_time from invest i where i.login_name=u.login_name and i.status='SUCCESS' and i.loan_id != 1
        order by i.created_time asc limit 1)) as invest_1st_3rd_timing,
        (select created_time from invest i where i.login_name=u.login_name and i.status='SUCCESS' and i.loan_id != 1
        order by i.created_time desc limit 1) as last_invest_time,
        (select max(ir.repay_date) from invest_repay ir join invest i on i.id=ir.invest_id where
        i.login_name=u.login_name) as last_repay_time,
        (select max(created_time) from withdraw where login_name=u.login_name and status='SUCCESS') as
        last_withdraw_time,
        (IFNULL((select sum(ir.corpus+ir.expected_interest+ir.default_interest-ir.expected_fee) from invest_repay ir,
        invest i where i.login_name=u.login_name and i.id=ir.invest_id and ir.status='REPAYING' and
        i.status='SUCCESS'),0) +
        IFNULL((select sum(cr.expected_interest-cr.expected_fee) from coupon_repay cr, invest i where
        i.login_name=u.login_name and i.id=cr.invest_id and cr.status='REPAYING' and i.status='SUCCESS'),0) +
        IFNULL((select sum(ier.expected_interest-ier.expected_fee) from invest_extra_rate ier, invest i where
        i.login_name=u.login_name and i.id=ier.invest_id and ier.status='REPAYING' and i.status='SUCCESS'),0)) as
        total_repaying_amount,
        u.last_login_time,
        u.last_login_source
        from user u
        <where>
            <if test="mobile != null and mobile != '' ">
                AND u.mobile = #{mobile}
            </if>
            <if test="role != null">
                AND exists (select 1 from user_role where u.login_name = user_role.login_name and user_role.role =
                #{role})
            </if>
            <if test="registerTimeStart != null">
                AND u.register_time >= #{registerTimeStart}
            </if>
            <if test="registerTimeEnd != null">
                AND u.register_time &lt; #{registerTimeEnd}
            </if>
            <if test="hasCertify != null and hasCertify == 'true'">
                AND u.identity_number is not null
            </if>
            <if test="hasCertify != null and hasCertify == 'false'">
                AND u.identity_number is null
            </if>
            <if test="invested != null and invested == 'true' ">
                AND EXISTS (select 1 from invest i where i.login_name=u.login_name and i.status='SUCCESS' and loan_id !=
                1 order by i.created_time asc limit 1)
            </if>
            <if test="invested != null and invested == 'false' ">
                AND NOT EXISTS (select 1 from invest i where i.login_name=u.login_name and i.status='SUCCESS' and
                loan_id != 1 order by i.created_time asc limit 1)
            </if>
            <if test="totalInvestAmountStart != null and totalInvestAmountStart != '' ">
                AND (select sum(amount) from invest i where i.login_name=u.login_name and i.status='SUCCESS' and
                i.loan_id != 1) >= #{totalInvestAmountStart}
            </if>
            <if test="totalInvestAmountEnd != null and totalInvestAmountEnd != '' ">
                AND (select sum(amount) from invest i where i.login_name=u.login_name and i.status='SUCCESS' and
                i.loan_id != 1) &lt;= #{totalInvestAmountEnd}
            </if>
            <if test="totalWithdrawAmountStart != null and totalWithdrawAmountStart != '' ">
                AND (select sum(amount) from withdraw w where w.login_name=u.login_name and w.status='SUCCESS') >=
                #{totalWithdrawAmountStart}
            </if>
            <if test="totalWithdrawAmountEnd != null and totalWithdrawAmountEnd != '' ">
                AND (select sum(amount) from withdraw w where w.login_name=u.login_name and w.status='SUCCESS') &lt;=
                #{totalWithdrawAmountEnd}
            </if>
            <if test="userBalanceStart != null and userBalanceStart != '' ">
                AND (select balance from bank_account a where a.login_name=u.login_name and a.role_type = 'INVESTOR') >=
                #{userBalanceStart}
            </if>
            <if test="userBalanceEnd != null and userBalanceEnd != '' ">
                AND (select balance from bank_account a where a.login_name=u.login_name and a.role_type = 'INVESTOR')
                &lt;= #{userBalanceEnd}
            </if>
            <if test="investCountStart != null and investCountStart >= 0 ">
                AND (select count(1) from invest i where i.login_name=u.login_name and i.status='SUCCESS' and i.loan_id
                != 1) >= #{investCountStart}
            </if>
            <if test="investCountEnd != null and investCountEnd >= 0 ">
                AND (select count(1) from invest i where i.login_name=u.login_name and i.status='SUCCESS' and i.loan_id
                != 1) &lt;= #{investCountEnd}
            </if>
            <if test="loanCountStart != null and loanCountStart >= 0 ">
                AND (select count(distinct l.id) from loan l, invest i where i.login_name=u.login_name and
                i.status='SUCCESS' and i.loan_id = l.id and l.id != 1) >= #{loanCountStart}
            </if>
            <if test="loanCountEnd != null and loanCountEnd >= 0 ">
                AND (select count(distinct l.id) from loan l, invest i where i.login_name=u.login_name and
                i.status='SUCCESS' and i.loan_id = l.id and l.id != 1) &lt;= #{loanCountEnd}
            </if>
            <if test="transformPeriodStart != null and transformPeriodStart >= 0 ">
                AND DATEDIFF((select created_time from invest i where i.login_name=u.login_name and i.status='SUCCESS'
                and i.loan_id != 1 order by i.created_time asc limit 1),
                u.register_time) >= #{transformPeriodStart}
            </if>
            <if test="transformPeriodEnd != null and transformPeriodEnd >= 0 ">
                AND DATEDIFF((select created_time from invest i where i.login_name=u.login_name and i.status='SUCCESS'
                and i.loan_id != 1 order by i.created_time asc limit 1),
                u.register_time) &lt;= #{transformPeriodEnd}
            </if>
            <if test="invest1st2ndTimingStart != null and invest1st2ndTimingStart >= 0 ">
                AND DATEDIFF((select created_time from invest i where i.login_name=u.login_name and i.status='SUCCESS'
                and i.loan_id != 1 order by i.created_time asc limit 1,1),
                (select created_time from invest i where i.login_name=u.login_name and i.status='SUCCESS' and i.loan_id
                != 1 order by i.created_time asc limit 1)) >= #{invest1st2ndTimingStart}
            </if>
            <if test="invest1st2ndTimingEnd != null and invest1st2ndTimingEnd >= 0 ">
                AND DATEDIFF((select created_time from invest i where i.login_name=u.login_name and i.status='SUCCESS'
                and i.loan_id != 1 order by i.created_time asc limit 1,1),
                (select created_time from invest i where i.login_name=u.login_name and i.status='SUCCESS' and i.loan_id
                != 1 order by i.created_time asc limit 1)) &lt;= #{invest1st2ndTimingEnd}
            </if>
            <if test="invest1st3ndTimingStart != null and invest1st3ndTimingStart >= 0 ">
                AND DATEDIFF((select created_time from invest i where i.login_name=u.login_name and i.status='SUCCESS'
                and i.loan_id != 1 order by i.created_time asc limit 2,1),
                (select created_time from invest i where i.login_name=u.login_name and i.status='SUCCESS' and i.loan_id
                != 1 order by i.created_time asc limit 1)) >= #{invest1st3ndTimingStart}
            </if>
            <if test="invest1st3ndTimingEnd != null and invest1st3ndTimingEnd >= 0 ">
                AND DATEDIFF((select created_time from invest i where i.login_name=u.login_name and i.status='SUCCESS'
                and i.loan_id != 1 order by i.created_time asc limit 2,1),
                (select created_time from invest i where i.login_name=u.login_name and i.status='SUCCESS' and i.loan_id
                != 1 order by i.created_time asc limit 1)) &lt;= #{invest1st3ndTimingEnd}
            </if>
            <if test="lastInvestTimeStart != null">
                AND (select created_time from invest i where i.login_name=u.login_name and i.status='SUCCESS' and
                i.loan_id != 1 order by i.created_time desc limit 1) > #{lastInvestTimeStart}
            </if>
            <if test="lastInvestTimeEnd != null">
                AND (select created_time from invest i where i.login_name=u.login_name and i.status='SUCCESS' and
                i.loan_id != 1 order by i.created_time desc limit 1) &lt; #{lastInvestTimeEnd}
            </if>
            <if test="lastRepayTimeStart != null">
                AND (select max(ir.repay_date) from invest_repay ir join invest i on i.id=ir.invest_id where
                i.login_name=u.login_name) > #{lastRepayTimeStart}
            </if>
            <if test="lastRepayTimeEnd != null">
                AND (select max(ir.repay_date) from invest_repay ir join invest i on i.id=ir.invest_id where
                i.login_name=u.login_name) &lt; #{lastRepayTimeEnd}
            </if>
            <if test="lastWithdrawTimeStart != null">
                AND (select max(created_time) from withdraw where login_name=u.login_name and status='SUCCESS') >
                #{lastWithdrawTimeStart}
            </if>
            <if test="lastWithdrawTimeEnd != null">
                AND (select max(created_time) from withdraw where login_name=u.login_name and status='SUCCESS') &lt;
                #{lastWithdrawTimeEnd}
            </if>
            <if test="repayingAmountStart != null and repayingAmountStart >= 0 ">
                AND (IFNULL((select sum(ir.corpus+ir.expected_interest+ir.default_interest-ir.expected_fee) from
                invest_repay ir, invest i where i.login_name=u.login_name and i.id=ir.invest_id and ir.status='REPAYING'
                and i.status='SUCCESS'),0) +
                IFNULL((select sum(cr.expected_interest-cr.expected_fee) from coupon_repay cr, invest i where
                i.login_name=u.login_name and i.id=cr.invest_id and cr.status='REPAYING' and i.status='SUCCESS'),0) +
                IFNULL((select sum(ier.expected_interest-ier.expected_fee) from invest_extra_rate ier, invest i where
                i.login_name=u.login_name and i.id=ier.invest_id and ier.status='REPAYING' and i.status='SUCCESS'),0))
                >= #{repayingAmountStart}
            </if>
            <if test="repayingAmountEnd != null and repayingAmountEnd >= 0 ">
                AND (IFNULL((select sum(ir.corpus+ir.expected_interest+ir.default_interest-ir.expected_fee) from
                invest_repay ir, invest i where i.login_name=u.login_name and i.id=ir.invest_id and ir.status='REPAYING'
                and i.status='SUCCESS'),0) +
                IFNULL((select sum(cr.expected_interest-cr.expected_fee) from coupon_repay cr, invest i where
                i.login_name=u.login_name and i.id=cr.invest_id and cr.status='REPAYING' and i.status='SUCCESS'),0) +
                IFNULL((select sum(ier.expected_interest-ier.expected_fee) from invest_extra_rate ier, invest i where
                i.login_name=u.login_name and i.id=ier.invest_id and ier.status='REPAYING' and i.status='SUCCESS'),0))
                &lt;= #{repayingAmountEnd}
            </if>
            <if test="lastLoginTimeStart != null">
                AND u.last_login_time >= #{lastLoginTimeStart}
            </if>
            <if test="lastLoginTimeEnd != null">
                AND u.last_login_time &lt; #{lastLoginTimeEnd}
            </if>
            <if test="lastLoginSource != null">
                AND u.last_login_source = #{lastLoginSource}
            </if>
        </where>
        limit #{index}, #{pageSize}
    </select>

    <select id="findRemainUsers" resultMap="remainUserViewResultMap">
        SELECT login_name, mobile, user_name, register_time,
        (select count(1) > 0 from invest where loan_id = 1 and invest.login_name = user.login_name and status =
        "SUCCESS") as use_experience_coupon,
        (select invest_time from invest where loan_id = 1 and invest.login_name = user.login_name and status = "SUCCESS"
        order by invest_time desc limit 1) as experience_time,
        (select count(1) from invest where login_name = user.login_name and loan_id != 1 and status = "SUCCESS") as
        invest_count,
        (select sum(amount) from invest where login_name = user.login_name and status = "SUCCESS") as invest_sum,
        (select trading_time from invest where login_name = user.login_name and loan_id != 1 and status = "SUCCESS"
        order by trading_time limit 1) as first_invest_time,
        (select amount from invest where login_name = user.login_name and loan_id != 1 and status = "SUCCESS" order by
        trading_time limit 1) as first_invest_amount,
        (select trading_time from invest where login_name = user.login_name and loan_id != 1 and status = "SUCCESS"
        order by trading_time limit 1, 1) as second_invest_time,
        (select amount from invest where login_name = user.login_name and loan_id != 1 and status = "SUCCESS" order by
        trading_time limit 1, 1) as second_invest_amount
        FROM aa.user
        <where>
            <if test="loginName != null and loginName != ''">
                AND login_name = #{loginName}
            </if>
            <if test="mobile != null and mobile != ''">
                AND mobile = #{mobile}
            </if>
            <if test="registerStartTime != null">
                AND register_time &gt;= #{registerStartTime}
            </if>
            <if test="registerEndTime != null">
                AND register_time &lt;= #{registerEndTime}
            </if>
            <if test="useExperienceCoupon != null">
                <if test="useExperienceCoupon == true">
                    AND (select count(1) from invest where loan_id = 1 and invest.login_name = user.login_name and
                    status = "SUCCESS") > 0
                </if>
                <if test="useExperienceCoupon == false">
                    AND (select count(1) from invest where loan_id = 1 and invest.login_name = user.login_name and
                    status = "SUCCESS") = 0
                </if>
            </if>
            <if test="experienceStartTime != null">
                AND exists (select 1 from invest where loan_id = 1 and invest.login_name = user.login_name and status =
                "SUCCESS" and invest_time &gt;= #{experienceStartTime})
            </if>
            <if test="experienceEndTime != null">
                AND exists (select 1 from invest where loan_id = 1 and invest.login_name = user.login_name and status =
                "SUCCESS" and invest_time &lt;= #{experienceEndTime})
            </if>
            <if test="investCountLowLimit != null">
                AND (select count(1) from invest where login_name = user.login_name AND loan_id != 1 and status =
                "SUCCESS") &gt;= #{investCountLowLimit}
            </if>
            <if test="investCountHighLimit != null">
                AND (select count(1) from invest where login_name = user.login_name AND loan_id != 1 and status =
                "SUCCESS") &lt;= #{investCountHighLimit}
            </if>
            <if test="investSumLowLimit != null">
                AND (select sum(amount) from invest where login_name = user.login_name and status = "SUCCESS") &gt;=
                #{investSumLowLimit}
            </if>
            <if test="investSumHighLimit != null">
                AND (select sum(amount) from invest where login_name = user.login_name and status = "SUCCESS") &lt;=
                #{investSumHighLimit}
            </if>
            <if test="firstInvestStartTime != null">
                AND (select trading_time from invest where login_name = user.login_name and loan_id != 1 and status =
                "SUCCESS"order by trading_time limit 1 ) &gt;= #{firstInvestStartTime}
            </if>
            <if test="firstInvestEndTime != null">
                AND (select trading_time from invest where login_name = user.login_name and loan_id != 1 and status =
                "SUCCESS" order by trading_time limit 1 ) &lt;= #{firstInvestEndTime}
            </if>
            <if test="secondInvestStartTime != null">
                AND (select trading_time from invest where login_name = user.login_name and loan_id != 1 and status =
                "SUCCESS" order by trading_time limit 1, 1 ) &gt;= #{secondInvestStartTime}
            </if>
            <if test="secondInvestEndTime != null">
                AND (select trading_time from invest where login_name = user.login_name and loan_id != 1 and status =
                "SUCCESS" order by trading_time limit 1, 1 ) &lt;= #{secondInvestEndTime}
            </if>
        </where>
        ORDER BY register_time DESC
        LIMIT #{index}, #{pageSize}
    </select>

    <select id="findRemainUsersCount" resultType="long">
        SELECT IFNULL(COUNT(1), 0)
        FROM aa.user
        <where>
            <if test="loginName != null and loginName != ''">
                AND login_name = #{loginName}
            </if>
            <if test="mobile != null and mobile != ''">
                AND mobile = #{mobile}
            </if>
            <if test="registerStartTime != null">
                AND register_time &gt;= #{registerStartTime}
            </if>
            <if test="registerEndTime != null">
                AND register_time &lt;= #{registerEndTime}
            </if>
            <if test="useExperienceCoupon != null">
                <if test="useExperienceCoupon == true">
                    AND (select count(1) from invest where loan_id = 1 and invest.login_name = user.login_name and
                    status = "SUCCESS") > 0
                </if>
                <if test="useExperienceCoupon == false">
                    AND (select count(1) from invest where loan_id = 1 and invest.login_name = user.login_name and
                    status = "SUCCESS") = 0
                </if>
            </if>
            <if test="experienceStartTime != null">
                AND exists (select 1 from invest where loan_id = 1 and invest.login_name = user.login_name and status =
                "SUCCESS" and invest_time &gt;= #{experienceStartTime})
            </if>
            <if test="experienceEndTime != null">
                AND exists (select 1 from invest where loan_id = 1 and invest.login_name = user.login_name and status =
                "SUCCESS" and invest_time &lt;= #{experienceEndTime})
            </if>
            <if test="investCountLowLimit != null">
                AND (select count(1) from invest where login_name = user.login_name AND loan_id != 1 and status =
                "SUCCESS") &gt;= #{investCountLowLimit}
            </if>
            <if test="investCountHighLimit != null">
                AND (select count(1) from invest where login_name = user.login_name AND loan_id != 1 and status =
                "SUCCESS") &lt;= #{investCountHighLimit}
            </if>
            <if test="investSumLowLimit != null">
                AND (select sum(amount) from invest where login_name = user.login_name and status = "SUCCESS") &gt;=
                #{investSumLowLimit}
            </if>
            <if test="investSumHighLimit != null">
                AND (select sum(amount) from invest where login_name = user.login_name and status = "SUCCESS") &lt;=
                #{investSumHighLimit}
            </if>
            <if test="firstInvestStartTime != null">
                AND (select trading_time from invest where login_name = user.login_name and loan_id != 1 and status =
                "SUCCESS"order by trading_time limit 1 ) &gt;= #{firstInvestStartTime}
            </if>
            <if test="firstInvestEndTime != null">
                AND (select trading_time from invest where login_name = user.login_name and loan_id != 1 and status =
                "SUCCESS" order by trading_time limit 1 ) &lt;= #{firstInvestEndTime}
            </if>
            <if test="secondInvestStartTime != null">
                AND (select trading_time from invest where login_name = user.login_name and loan_id != 1 and status =
                "SUCCESS" order by trading_time limit 1, 1 ) &gt;= #{secondInvestStartTime}
            </if>
            <if test="secondInvestEndTime != null">
                AND (select trading_time from invest where login_name = user.login_name and loan_id != 1 and status =
                "SUCCESS" order by trading_time limit 1, 1 ) &lt;= #{secondInvestEndTime}
            </if>
        </where>
    </select>

    <select id="findExperienceBalance" resultMap="userViewResultMap" parameterType="map">
        select u.*, e.experience_balance
        from experience_account e
        inner join user u on u.login_name = e.login_name
        <where>
            e.experience_balance > 0
            <if test="mobile != null and mobile != ''">
                and u.mobile = #{mobile}
            </if>
            <if test="balanceMin != null and balanceMin !=''">
                and e.experience_balance &gt; #{balanceMin}
            </if>
            <if test="balanceMax != null and balanceMax !=''">
                and e.experience_balance &lt;= #{balanceMax}
            </if>
        </where>
        order by e.experience_balance DESC
        limit #{index}, #{pageSize}
    </select>

    <select id="findCountExperienceBalance" resultType="int" parameterType="map">
        select count(*)
        from experience_account e
        <if test="mobile != null and mobile != ''">
            inner join user u on u.login_name = e.login_name
        </if>
        <where>
            e.experience_balance > 0
            <if test="mobile != null and mobile != ''">
                and u.mobile = #{mobile}
            </if>
            <if test="balanceMin != null and balanceMin !=''">
                and e.experience_balance &gt; #{balanceMin}
            </if>
            <if test="balanceMax != null and balanceMax !=''">
                and e.experience_balance &lt;= #{balanceMax}
            </if>
        </where>
    </select>

    <select id="sumExperienceBalance" parameterType="map" resultType="long">
        select ifnull(sum(e.experience_balance),0)
        from experience_account e
        <if test="mobile != null and mobile != ''">
            inner join user u on u.login_name = e.login_name
        </if>
        <where>
            e.experience_balance > 0
            <if test="mobile != null and mobile != ''">
                and u.mobile = #{mobile}
            </if>
            <if test="balanceMin != null and balanceMin !=''">
                and e.experience_balance >= #{balanceMin}
            </if>
            <if test="balanceMax != null and balanceMax !=''">
                and e.experience_balance &lt;= #{balanceMax}
            </if>
        </where>
    </select>

    <select id="findAllUserChannels" resultType="string">
        select IFNULL(channel,'其他') from user group by channel order by channel desc
    </select>
</mapper>