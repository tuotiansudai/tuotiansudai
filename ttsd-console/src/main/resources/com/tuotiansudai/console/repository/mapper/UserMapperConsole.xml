<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tuotiansudai.console.repository.mapper.UserMapperConsole">

    <cache-ref namespace="com.tuotiansudai.repository.mapper.UserMapper"/>

    <resultMap id="userViewResultMap" type="UserView">
        <id column="id" property="id"/>
        <result column="login_name" property="loginName"/>
        <result column="mobile" property="mobile"/>
        <result column="email" property="email"/>
        <result column="user_name" property="userName"/>
        <result column="identity_number" property="identityNumber"/>
        <result column="is_staff" property="isStaff"/>
        <result column="is_bind_bank_card" property="isBindBankCard"/>
        <result column="status" property="status"/>
        <result column="channel" property="channel"/>
        <result column="source" property="source"/>
        <result column="province" property="province"/>
        <result column="city" property="city"/>
        <result column="auto_invest_status" property="autoInvestStatus"/>
        <result column="referrer_mobile" property="referrerMobile"/>
        <result column="register_time" property="registerTime"/>
        <result column="is_referrer_staff" property="isReferrerStaff"/>
        <result column="last_bill_time" property="lastBillTime"/>
        <result column="fast_pay" property="fastPay"/>
    </resultMap>

    <select id="findAllUser" parameterType="map" resultMap="userViewResultMap">
        SELECT
        u.id as id,
        u.login_name as login_name,
        u.mobile as mobile,
        u.email as email,
        u.source as source,
        u.channel as channel,
        u.province as province,
        u.city as city,
        u.register_time as register_time,
        u.status as status,
        a.user_name as user_name,
        a.identity_number as identity_number,
        (select mobile from user referrer where referrer.login_name = u.referrer) AS referrer_mobile,
        IF(exists (select 1 from auto_invest_plan au where u.login_name = au.login_name and enabled is TRUE), "0", "1") as auto_invest_status,
        IF(exists (select 1 from user_role referrer_role where referrer_role.login_name = u.referrer and referrer_role.role = 'STAFF'), TRUE, FALSE) as is_referrer_staff,
        IF(exists (select 1 from user_role where user_role.login_name = u.login_name and user_role.role = 'STAFF'), TRUE, FALSE) as is_staff,
        IF(exists (select 1 from bank_card where bank_card.login_name = u.login_name and bank_card.status = 'PASSED'),
        TRUE, FALSE) as is_bind_bank_card,
        IF(exists (select 1 from bank_card where bank_card.login_name = u.login_name and bank_card.status = 'PASSED' and
        bank_card.is_fast_pay_on = 1), TRUE, FALSE) as fast_pay
        from
        <choose>
            <when test="roleStage == null ">
                user u
            </when>
            <when test="roleStage.name() == 'NORMAL_USER' ">
                (SELECT
                j.*
                FROM
                user j
                WHERE
                NOT EXISTS( SELECT
                1
                FROM
                (SELECT
                ff.login_name
                FROM
                (SELECT
                k.login_name
                FROM
                user_role o
                RIGHT JOIN referrer_relation k ON o.login_name = k.referrer_login_name
                AND k.level = 1
                WHERE
                o.role = 'STAFF' UNION SELECT
                h.login_name
                FROM
                user_role h
                WHERE
                h.role IN ('STAFF' , 'AGENT')) ff) gg
                WHERE
                gg.login_name = j.login_name) and EXISTS(select 1 from invest i where j.login_name = i.login_name) ) u
            </when>
            <when test="roleStage.name() == 'RECOMMENDATION' ">
                (select j.* from user j JOIN (select k.login_name from user_role o RIGHT join referrer_relation k on
                o.login_name = k.referrer_login_name and k.level = 1 where o.role = 'STAFF') gg on j.login_name = gg.login_name)
                u
            </when>
            <otherwise>
                user u join user_role r on u.login_name = r.login_name
            </otherwise>
        </choose>
        left join account a on u.login_name = a.login_name
        <where>
            <if test="roleStage !=null and roleStage.name() != 'RECOMMENDATION' and  roleStage.name()!='NORMAL_USER' ">
                and r.role = #{roleStage}
            </if>
            <if test="email !=null and email !='' ">
                and u.email like '${email}%'
            </if>
            <if test="mobile !=null and mobile !='' ">
                and u.mobile like '${mobile}%'
            </if>
            <if test="loginName !=null and loginName != '' ">
                and u.login_name = #{loginName}
            </if>
            <if test="beginTime !=null">
                and u.register_time >= #{beginTime}
            </if>
            <if test="endTime !=null ">
                and u.register_time &lt;= #{endTime}
            </if>
            <if test="referrerMobile !=null and referrerMobile != '' ">
                and exists (select 1 from user referrer where u.referrer = referrer.login_name and referrer.mobile = #{referrerMobile})
            </if>
            <if test="channel !=null and channel != '' ">
                and u.channel = #{channel}
            </if>
            <if test="source !=null">
                and u.source = #{source}
            </if>
            <if test="userOperation != null">
                <if test="userOperation.name() == 'BIND_CARD'">
                    and IF(exists (select 1 from bank_card where bank_card.login_name = u.login_name and
                    bank_card.status = 'PASSED'), TRUE, FALSE)
                </if>
                <if test="userOperation.name() == 'FAST_PAY'">
                    and IF(exists (select 1 from bank_card where bank_card.login_name = u.login_name and
                    bank_card.status = 'PASSED' and bank_card.is_fast_pay_on = 1), TRUE, FALSE)
                </if>
                <if test="userOperation.name() == 'RECHARGED'">
                    and IF(exists (select 1 from recharge where recharge.login_name = u.login_name and recharge.status =
                    'SUCCESS'), TRUE, FALSE)
                </if>
                <if test="userOperation.name() == 'INVESTED'">
                    and IF(exists (select 1 from invest where invest.login_name = u.login_name and invest.status =
                    'SUCCESS'), TRUE, FALSE)
                </if>
                <if test="userOperation.name() == 'MULTIPLE_INVESTED'">
                    and (select count(1) from invest where invest.login_name = u.login_name and invest.status =
                    'SUCCESS') > 1
                </if>
            </if>
        </where>
        order by u.register_time desc
        limit #{index}, #{pageSize}
    </select>

    <select id="findAllUserCount" parameterType="map" resultType="int">
        select count(1) from
        <choose>
            <when test="roleStage == null">
                user u
            </when>
            <when test="roleStage.name() == 'NORMAL_USER' ">
                (SELECT
                j.*
                FROM
                user j
                WHERE
                NOT EXISTS( SELECT
                1
                FROM
                (SELECT
                ff.login_name
                FROM
                (SELECT
                k.login_name
                FROM
                user_role o
                RIGHT JOIN referrer_relation k ON o.login_name = k.referrer_login_name
                AND k.level = 1
                WHERE
                o.role = 'STAFF' UNION SELECT
                h.login_name
                FROM
                user_role h
                WHERE
                h.role IN ('STAFF' , 'AGENT')) ff) gg
                WHERE
                gg.login_name = j.login_name) and EXISTS(select 1 from invest i where j.login_name = i.login_name) ) u
            </when>
            <when test="roleStage.name() == 'RECOMMENDATION' ">
                (select j.* from user j JOIN (select k.login_name from user_role o RIGHT join referrer_relation k on
                o.login_name = k.referrer_login_name and k.level = 1 where o.role = 'STAFF') gg on j.login_name = gg.login_name)
                u
            </when>
            <otherwise>
                user u join user_role r on u.login_name = r.login_name
            </otherwise>
        </choose>
        <where>
            <if test="roleStage !=null and roleStage.name() != 'RECOMMENDATION' and  roleStage.name()!='NORMAL_USER' ">
                and r.role = #{roleStage}
            </if>
            <if test="email !=null and email !='' ">
                and u.email like '${email}%'
            </if>
            <if test="mobile !=null and mobile !='' ">
                and u.mobile like '${mobile}%'
            </if>
            <if test="loginName !=null and loginName != '' ">
                and u.login_name = #{loginName}
            </if>
            <if test="beginTime !=null">
                and u.register_time >= #{beginTime}
            </if>
            <if test="endTime !=null ">
                and u.register_time &lt;= #{endTime}
            </if>
            <if test="referrerMobile !=null and referrerMobile != '' ">
                and exists (select 1 from user referrer where u.referrer = referrer.login_name and referrer.mobile = #{referrerMobile})
            </if>
            <if test="channel !=null and channel != '' ">
                and u.channel = #{channel}
            </if>
            <if test="source !=null">
                and u.source = #{source}
            </if>
            <if test="userOperation != null">
                <if test="userOperation.name() == 'BIND_CARD'">
                    and IF(exists (select 1 from bank_card where bank_card.login_name = u.login_name and
                    bank_card.status = 'PASSED'), TRUE, FALSE)
                </if>
                <if test="userOperation.name() == 'FAST_PAY'">
                    and IF(exists (select 1 from bank_card where bank_card.login_name = u.login_name and
                    bank_card.status = 'PASSED' and bank_card.is_fast_pay_on = 1), TRUE, FALSE)
                </if>
                <if test="userOperation.name() == 'RECHARGED'">
                    and IF(exists (select 1 from recharge where recharge.login_name = u.login_name and recharge.status =
                    'SUCCESS'), TRUE, FALSE)
                </if>
                <if test="userOperation.name() == 'INVESTED'">
                    and IF(exists (select 1 from invest where invest.login_name = u.login_name and invest.status =
                    'SUCCESS'), TRUE, FALSE)
                </if>
                <if test="userOperation.name() == 'MULTIPLE_INVESTED'">
                    and (select count(1) from invest where invest.login_name = u.login_name and invest.status =
                    'SUCCESS') > 1
                </if>
            </if>
        </where>
    </select>

    <select id="searchAllUsers" parameterType="map" resultMap="userViewResultMap">
        SELECT
        user.id as id,
        user.login_name as login_name,
        user.mobile as mobile,
        user.email as email,
        user.source as source,
        user.channel as channel,
        user.province as province,
        user.city as city,
        user.register_time as register_time,
        user.status as status,
        account.user_name as user_name,
        account.identity_number as identity_number,
        (select mobile from user referrer where referrer.login_name = user.referrer) AS referrer_mobile
        FROM user
        LEFT JOIN account ON user.login_name = account.login_name
        <where>
            <if test="identityNumber != null and identityNumber != '' ">
                AND account.`identity_number` = #{identityNumber}
            </if>
            <if test="loginName != null and loginName != '' ">
                AND user.`login_name` = #{loginName}
            </if>
            <if test="referrerMobile != null and referrerMobile != '' ">
                AND EXISTS (select 1 from user referrer where referrer.login_name = user.referrer and referrer.mobile = #{referrerMobile})
            </if>
            <if test="mobile != null and mobile != '' ">
                AND user.`mobile` = #{mobile}
            </if>
        </where>
        ORDER BY user.`register_time` DESC
    </select>

    <select id="findUsersAccountBalance" parameterType="map" resultMap="userViewResultMap">
        SELECT
        user.id as id,
        user.login_name as login_name,
        user.mobile as mobile,
        user.province as province,
        user.city as city,
        IF(exists (select 1 from user_role where user_role.login_name = user.login_name and user_role.role = 'STAFF'), TRUE, FALSE) as is_staff,
        user.register_time as register_time,
        user.status as status,
        account.user_name as user_name,
        account.balance as balance,
        (select max(`user_bill`.`created_time`) from `user_bill` where `user_bill`.`login_name` = `user`.`login_name`) as last_bill_time
        FROM `user`
        JOIN `account`
        ON `user`.`login_name` = `account`.`login_name`
        WHERE NOT EXISTS (SELECT 1 FROM `user_role`  WHERE `user`.`login_name` = `user_role`.`login_name` AND `user_role`.`role` = 'LOANER')
        <if test="mobile != null and mobile != '' ">
            AND `user`.`mobile` = #{mobile}
        </if>
        <if test="balanceMin >= 0">
            AND `account`.`balance` >= #{balanceMin}
        </if>
        <if test="balanceMax >= 0">
            AND `account`.`balance` &lt;= #{balanceMax}
        </if>
        ORDER BY `account`.`balance` DESC
        <if test="startLimit != null and endLimit != null">
            limit #{startLimit}, #{endLimit}
        </if>

    </select>

    <select id="findUsersAccountBalanceSum" parameterType="map" resultType="long">
        SELECT IFNULL(SUM(`account`.`balance`), 0)
        FROM `user`
        JOIN `account`
        ON `user`.`login_name` = `account`.`login_name`
        WHERE NOT EXISTS (SELECT 1 FROM `user_role`  WHERE `user`.`login_name` = `user_role`.`login_name` AND `user_role`.`role` = 'LOANER')
        <if test="mobile != null and mobile != '' ">
            AND `user`.`mobile` = #{mobile}
        </if>
        <if test="balanceMin >= 0">
            AND `account`.`balance` >= #{balanceMin}
        </if>
        <if test="balanceMax >= 0">
            AND `account`.`balance` &lt;= #{balanceMax}
        </if>
    </select>

    <select id="findUsersAccountBalanceCount" parameterType="map" resultType="long">
        SELECT IFNULL(count(1), 0)
        FROM `user`
        JOIN `account`
        ON `user`.`login_name` = `account`.`login_name`
        WHERE NOT EXISTS (SELECT 1 FROM `user_role`  WHERE `user`.`login_name` = `user_role`.`login_name` AND `user_role`.`role` = 'LOANER')
        <if test="mobile != null and mobile != '' ">
            AND `user`.`mobile` = #{mobile}
        </if>
        <if test="balanceMin >= 0">
            AND `account`.`balance` >= #{balanceMin}
        </if>
        <if test="balanceMax >= 0">
            AND `account`.`balance` &lt;= #{balanceMax}
        </if>
    </select>

    <select id="findUsersCountByChannel" parameterType="string" resultType="long">
        select ifnull(count(*),0) from user where channel = #{channel}
    </select>

    <select id="findStaffByLikeLoginName" parameterType="string" resultType="string">
        select login_name
        from user
        where user.login_name like CONCAT(CONCAT('%', #{loginName}), '%')
        and exists(select 1 from user_role where user_role.login_name = user.login_name and user_role.role = 'STAFF')
    </select>

    <select id="findMobileLike" parameterType="string" resultType="string">
        select mobile from user where mobile like CONCAT(CONCAT('%', #{mobile}), '%')
    </select>

    <select id="findLoginNameLike" parameterType="string" resultType="string">
        select login_name from user where login_name like CONCAT(CONCAT('%', #{loginName}), '%')
    </select>

    <select id="findAllLoanerLikeLoginName" parameterType="string" resultType="string">
        select t.login_name from user t JOIN user_role r ON t.`login_name` = r.`login_name` AND r.`role` = 'LOANER' where t.login_name like CONCAT(CONCAT('%', #{loginName}), '%')
    </select>

    <select id="findAccountLikeLoginName" parameterType="string" resultType="string">
        select login_name
        from user
        where login_name like CONCAT(CONCAT('%', #{loginName}), '%')
        and exists (select 1 from account where account.login_name = user.login_name)
    </select>
</mapper>