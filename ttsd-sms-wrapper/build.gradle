apply plugin: 'war'
apply plugin: 'org.flywaydb.flyway'
apply from: 'db_migration.gradle'

dependencies {
    def springVersion = '4.1.7.RELEASE'
    def jacksonVersion = '2.5.4'
    def mybatisVersion = '3.3.0'
    def mybatisSpringVersion = '1.2.3'
    compile "org.springframework:spring-webmvc:$springVersion",
            "org.springframework:spring-jdbc:$springVersion",
            "com.fasterxml.jackson.core:jackson-core:$jacksonVersion",
            "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion",
            "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion",
            "org.mybatis:mybatis:$mybatisVersion",
            "org.mybatis:mybatis-spring:$mybatisSpringVersion",
            'com.jolbox:bonecp-spring:0.8.0.RELEASE',
            'mysql:mysql-connector-java:5.1.35',
            'com.squareup.okhttp:okhttp:2.4.0',
            'dom4j:dom4j:1.6.1'
}

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.flywaydb:flyway-gradle-plugin:3.2.1'
    }
}

war {
    archiveName "ttsd-sms-wrapper.war"
    destinationDir = file("war")
    from('/workspace/new_version_config/ttsd-sms-wrapper/') {
        into 'WEB-INF/classes/'
    }
}

flyway {
    def productionFlywayConfig = '/workspace/new_version_config/ttsd-sms-wrapper/jdbc.properties'
    locations = ['filesystem:db_migration/sms_operations']
    user = 'root'
    password = ''
    outOfOrder = true
    placeholders = ['sms_operations': 'sms_operations']
    schemas = ['sms_operations']
    url = 'jdbc:mysql://192.168.33.10:3306/'
    if (new File(productionFlywayConfig).exists()) {
        Properties properties = new Properties()
        properties.load(new FileInputStream(productionFlywayConfig))
        def schema = properties.getProperty('jdbc.scheam', 'sms_operations')
        user = properties.getProperty('jdbc.username', user)
        password = properties.getProperty('jdbc.password', password)
        url = properties.getProperty('flyway.url', url)
        locations = ["filesystem:db_migration/$schema"]
        placeholders = ['sms_operations': "$schema"]
        schemas = ["$schema"]
    }
}