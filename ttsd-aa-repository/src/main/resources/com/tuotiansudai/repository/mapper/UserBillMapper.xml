<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tuotiansudai.repository.mapper.UserBillMapper">

    <cache eviction="LRU" type="com.tuotiansudai.cache.MybatisRedisCache"/>

    <resultMap id="userBillResultMap" type="UserBillModel">
        <id column="id" property="id"/>
        <result column="login_name" property="loginName"/>
        <result column="order_id" property="orderId"/>
        <result column="amount" property="amount"/>
        <result column="balance" property="balance"/>
        <result column="freeze" property="freeze"/>
        <result column="operation_type" property="operationType"/>
        <result column="business_type" property="businessType"/>
        <result column="created_time" property="createdTime"/>
    </resultMap>

    <resultMap id="userBillResultView" type="UserBillPaginationView" extends="userBillResultMap">
        <result column="user_name" property="userName"/>
        <result column="ump_user_name" property="umpUserName"/>
        <result column="mobile" property="mobile"/>
        <result column="is_staff" property="isStaff"/>
    </resultMap>

    <insert id="create" parameterType="UserBillModel" useGeneratedKeys="true" keyProperty="id">
        insert into user_bill (login_name, order_id, amount, balance, freeze, operation_type, business_type, created_time)
        value(#{loginName}, #{orderId}, #{amount}, #{balance}, #{freeze}, #{operationType}, #{businessType}, #{createdTime})
    </insert>

    <select id="findByLoginName" parameterType="java.lang.String" resultMap="userBillResultMap">
        select * from user_bill where login_name = #{loginName}
    </select>

    <select id="findUserBillsCount" parameterType="map" resultType="int">
        select count(*) from user_bill
        <where>
            <if test="userBillBusinessType != null and userBillBusinessType.size != 0">
                business_type in
                <foreach item="item" index="index" collection="userBillBusinessType" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="startTime != null">
                and created_time >= #{startTime}
            </if>
            <if test="endTime != null">
                <![CDATA[ and created_time <= #{endTime} ]]>
            </if>
            <if test="loginName != null">
                AND login_name = #{loginName}
            </if>
        </where>
    </select>

    <select id="findUserBills" parameterType="map" resultMap="userBillResultMap">
        select * from user_bill
        <where>
            <if test="userBillBusinessType != null and userBillBusinessType.size != 0">
                business_type in
                <foreach item="item" index="index" collection="userBillBusinessType" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="startTime != null">
                and created_time >= #{startTime}
            </if>
            <if test="endTime != null">
                <![CDATA[ and created_time <= #{endTime} ]]>
            </if>
            <if test="loginName != null">
                AND login_name = #{loginName}
            </if>
        </where>
        order by created_time desc, id desc
        limit #{indexPage}, #{pageSize}
    </select>

    <select id="findUserFunds" parameterType="map" resultMap="userBillResultView">
        select ub.*,
        u.user_name,
        u.mobile,
        u.ump_user_name,
        IFNULL((select 1 from user_role ur where ur.login_name = ub.login_name and ur.role in ('SD_STAFF',
        'ZC_STAFF')),0) as is_staff
        from user_bill ub
        JOIN `user` u on ub.login_name = u.login_name
        <if test="mobile != null and mobile != ''">
            and u.mobile = #{mobile}
        </if>
        <where>
            <if test="userBillBusinessType != null">
                and ub.business_type = #{userBillBusinessType}
            </if>
            <if test="userBillOperationType != null">
                and ub.operation_type = #{userBillOperationType}
            </if>
            <if test="startTime != null">
                and ub.created_time >= #{startTime}
            </if>
            <if test="endTime != null">
                <![CDATA[ and ub.created_time <= #{endTime} ]]>
            </if>
            AND ub.business_type != 'PAYROLL'
        </where>
        order by ub.created_time desc, id desc
        <if test="startLimit !=null and endLimit !=null ">
            limit #{startLimit} , #{endLimit}
        </if>
    </select>

    <select id="findUserFundsCount" parameterType="map" resultType="int">
        select count(*) from user_bill
        <if test="mobile != null and mobile != ''">
            join user on user_bill.login_name = user.login_name
            and user.mobile = #{mobile}
        </if>
        <where>
            <if test="userBillBusinessType != null">
                and user_bill.business_type = #{userBillBusinessType}
            </if>
            <if test="userBillOperationType != null">
                and user_bill.operation_type = #{userBillOperationType}
            </if>
            <if test="startTime != null">
                and user_bill.created_time >= #{startTime}
            </if>
            <if test="endTime != null">
                <![CDATA[ and user_bill.created_time <= #{endTime} ]]>
            </if>
            AND user_bill.business_type != 'PAYROLL'
        </where>
    </select>

</mapper>